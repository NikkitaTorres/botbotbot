{"version":3,"file":"bootstrap-nike-shop.chunk.207aa8.js","mappings":"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","sources":["webpack://@nike/shop-components/./src/analytics/constants.js","webpack://@nike/shop-components/./src/schemas.js","webpack://@nike/shop-components/./src/deep-state-merge.js","webpack://@nike/shop-components/./src/experiments/mybag-3716-store_selector_mfe/utils/get-search-details-postal-code.js","webpack://@nike/shop-components/./src/experiments/mybag-3716-store_selector_mfe/utils/get-retail-mfe-location-state.js","webpack://@nike/shop-components/./src/reducer.js","webpack://@nike/shop-components/./src/create-persistent-store.js","webpack://@nike/shop-components/./src/on-error-callback.js","webpack://@nike/shop-components/./src/determine-address-vs-country.js","webpack://@nike/shop-components/./src/nike-shop.js","webpack://@nike/shop-components/./src/selectors/get-has-cart-errors-or-warnings.js","webpack://@nike/shop-components/./src/observe-store.js","webpack://@nike/shop-components/./src/initialize-user.js","webpack://@nike/shop-components/./src/on-cart-update-side-effects.js","webpack://@nike/shop-components/./src/append-to-href.js","webpack://@nike/shop-components/./src/init-user-and-observe-store.js","webpack://@nike/shop-components/./src/setup-locale-data.js","webpack://@nike/shop-components/./src/bootstrap-nike-shop.js","webpack://@nike/shop-components/./src/business-logic/determine-postal-code.js","webpack://@nike/shop-components/./src/constants.js","webpack://@nike/shop-components/./src/create-custom-event.js","webpack://@nike/shop-components/./src/dispatch-custom-event.js","webpack://@nike/shop-components/./src/experiments/mybag-3716-store_selector_mfe/constants.js","webpack://@nike/shop-components/./src/experiments/mybag-3716-store_selector_mfe/utils/get-selected-store-location-id.js","webpack://@nike/shop-components/./src/get-page.js","webpack://@nike/shop-components/./src/get-is-page-cart.js","webpack://@nike/shop-components/./src/get-pickup-offering-status.js","webpack://@nike/shop-components/./src/get-shell-locale.js","webpack://@nike/shop-components/./src/identity.js","webpack://@nike/shop-components/./src/selectors/get-all-cart-errors.js","webpack://@nike/shop-components/./src/selectors/get-filtered-cart-errors.js","webpack://@nike/shop-components/./src/selectors/get-cart-warnings.js","webpack://@nike/shop-components/./src/selectors/get-filtered-cart-warnings.js","webpack://@nike/shop-components/./src/state-replacement/get-webshellclient-locale.js","webpack://@nike/shop-components/./src/state-replacement/selectors/get-is-country-included-in-global-store.js","webpack://@nike/shop-components/./src/state-replacement/selectors/locale.js","webpack://@nike/shop-components/./src/track-event.js"],"sourcesContent":["import { HOST_NAME } from '../constants';\n\nconst SEGMENT_EVENTS_SCHEMA_PREFIX = `https://${HOST_NAME}/assets/measure/schemas/digital-product/dotcom/platform/web/classification`;\nconst LOCATION_UPDATED_EVENT_SCHEMA = `${SEGMENT_EVENTS_SCHEMA_PREFIX}/experience-event/experience/nike-shop-client/event-type/track/event-name/location-updated/version/LATEST/schema.json`;\nconst ERROR_MODAL_VIEWED_SCHEMA = `https://${HOST_NAME}/assets/measure/schemas/digital-product/dotcom/platform/web/classification/experience-event/experience/nike-shop-client/event-type/track/event-name/error-modal-viewed/version/LATEST/schema.json`;\nconst PICKUP_OFFERINGS_VIEWED_EVENT_SCHEMA = `${SEGMENT_EVENTS_SCHEMA_PREFIX}/experience-event/experience/cart/event-type/track/event-name/pickup-offerings-viewed/version/LATEST/schema.json`;\n\nexport const LOCATION_UPDATED = 'Location Updated';\n// NOTE Formerly \"Error Message Shown\", but renamed to \"Error Modal Viewed\" see slack thread for background: https://nikedigital.slack.com/archives/C0390EMTFKQ/p1689626434494649\nexport const ERROR_MODAL_VIEWED = 'Error Modal Viewed';\nexport const PICKUP_OFFERINGS_VIEWED = `Pickup Offerings Viewed`;\n\nexport const eventNameLookup = {\n  [LOCATION_UPDATED]: LOCATION_UPDATED_EVENT_SCHEMA,\n  [ERROR_MODAL_VIEWED]: ERROR_MODAL_VIEWED_SCHEMA,\n  [PICKUP_OFFERINGS_VIEWED]: PICKUP_OFFERINGS_VIEWED_EVENT_SCHEMA,\n};\n","/* istanbul ignore file */\nimport { schema } from 'normalizr';\n\nconst availableVasSchema = new schema.Entity(\n  'availableVas',\n  {},\n  {\n    idAttribute: value => value.type || value.vasType,\n    processStrategy: value => ({\n      ...value,\n      type: value.type || value.vasType,\n    }),\n  },\n);\n\nconst valueAddedService = new schema.Entity(\n  'vas',\n  {\n    valueAddedService: availableVasSchema,\n  },\n  {\n    processStrategy: value => ({\n      ...value,\n      type: value.type || value.vasType,\n    }),\n  },\n);\n\nconst promotionCodeSchema = new schema.Entity(\n  'promoCodes',\n  {},\n  { idAttribute: val => val.code || val.id },\n);\nconst productContentSchema = new schema.Entity(\n  'productContent',\n  {},\n  {\n    idAttribute: (val, parent, key) => {\n      switch (key) {\n        case 'content':\n          return parent.id;\n        case 'productContent':\n          return parent.merchProduct;\n\n        default:\n          return parent.id;\n      }\n    },\n  },\n);\nconst productImageSchema = new schema.Entity(\n  'productImages',\n  {},\n  {\n    idAttribute: (val, parent, key) => {\n      switch (key) {\n        case 'imageSet':\n          return parent.id;\n\n        case 'imageUrls':\n          return parent.merchProduct;\n        default:\n          return parent.id;\n      }\n    },\n  },\n);\n\nconst product = new schema.Entity(\n  'products',\n  {\n    content: productContentSchema,\n    valueAddedServices: [valueAddedService],\n    imageSet: productImageSchema,\n    availableVas: [availableVasSchema],\n  },\n  {\n    processStrategy: value => ({\n      ...value,\n      // double the valueAddedSerivces here so we can normalize by type and id\n      availableVas: value.valueAddedServices,\n      vas: value.valueAddedServices,\n      isNikeId: value?.styleType === 'NIKEID', // needed?\n      isGiftCard: value?.styleType === 'GIFT_CARD', // needed?\n      hasWarranty: Boolean(value?.valueAddedServices?.find(item => item?.type === 'WARRANTY')),\n    }),\n  },\n);\n\nconst warning = new schema.Entity(\n  'warnings',\n  {},\n  {\n    idAttribute: value => value.item?.id,\n  },\n);\n\nconst sku = new schema.Entity(\n  'skus',\n  {\n    productId: product,\n    product,\n    valueAddedServices: [valueAddedService],\n  },\n  {\n    processStrategy: (value, parent) => {\n      const shape = {\n        ...value,\n        productId: value.productId || value.product?.id || parent?.id,\n        // the relationship is actually via product so we can define that here and include it in the schema entity map above\n        valueAddedServices: value?.product?.valueAddedServices || parent?.valueAddedServices || [],\n      };\n      return shape;\n    },\n  },\n);\n\nconst listItem = new schema.Entity('listItems', {\n  productId: product,\n  skuId: sku,\n});\n\nconst list = new schema.Entity(\n  'list',\n  {\n    listItems: {\n      objects: [listItem],\n    },\n  },\n  { idAttribute: 'country' },\n);\n\nproduct.define({ skus: [sku] });\nvalueAddedService.define({\n  imageSet: productImageSchema,\n});\n\nconst fulfillmentOfferingItem = new schema.Entity(\n  'offeringItems',\n  {},\n  {\n    // we will normalize by skuId AND item id to allow looking up by both\n    idAttribute: (value, parent, key) => {\n      return key === 'skuOfferings' ? value.skuId : value.id;\n    },\n    // to minimize the amount of ids stored we'll take only the fulfillmentOfferings from value\n    // alternately we can work with just skuId but we don't know what happens with cart with multiple skuIds that are same\n    processStrategy: val => ({ fulfillmentOfferings: val?.fulfillmentOfferings }),\n  },\n);\n\nconst resultSchema = new schema.Entity(\n  'locationSearchResults',\n  {},\n  {\n    processStrategy: value => {\n      const { description, ...details } = value?.details || {};\n      return {\n        ...value,\n        // NOTE we could flatten it? or leave it?\n        // name: details?.name,\n        // postalAddress: details?.postalAddress,\n        // searchProximity: details?.searchProximity,\n        // NOTE but in every case we should not preserve details.description field as it contains unbounded and unused html we'd be storing in state\n        details,\n      };\n    },\n  },\n);\n\nconst locationsSchema = new schema.Entity(\n  'locations',\n  {\n    results: [resultSchema],\n  },\n  {\n    // most locations have top level ids, but search locations do not - ids are in nested results\n    idAttribute: value => value.id || 'SEARCH',\n  },\n);\n\nconst itemCostSchema = new schema.Entity(\n  'itemCosts',\n  {\n    // via foffs\n    promotionDiscounts: [promotionCodeSchema],\n  },\n  {\n    idAttribute: (val, parent) => parent.id,\n  },\n);\nconst cartItem = new schema.Entity(\n  'cartItems',\n  {\n    skuId: sku,\n    // NOTE this comment is for review only and will be modified\n    // we do not need to create this relationship unless we also intend to normalize instructionIds which we don't need to\n    // valueAddedServices: [valueAddedService],\n    promotionDiscounts: [promotionCodeSchema], // via shipping options\n    itemCosts: itemCostSchema, // has promotionDiscounts via foffs\n  },\n  {\n    processStrategy: value => ({\n      ...value,\n      productId: value.productId || value?.sku?.productId,\n    }),\n  },\n);\n\nconst fulfillmentGroupSchema = new schema.Entity(\n  'fulfillmentGroup',\n  {\n    items: [cartItem],\n  },\n  {\n    idAttribute: val => val.fulfillmentDetails?.type,\n  },\n);\n\nconst cartTotals = new schema.Entity(\n  'cartTotals',\n  {},\n  {\n    idAttribute: (val, parent) =>\n      val.country ? val.country : parent.country || window.NikeShop.country,\n    processStrategy: (val, parent) => {\n      if (parent.fulfillmentGroups) {\n        return {\n          summaryTotal: val.total,\n          summarySubtotal: val.items.details?.price,\n          summaryDiscountTotal: val.items.details?.discount,\n          summaryEstimatedTax: val.taxes?.total,\n          summaryEstimatedShipping: val.fulfillment?.total,\n          summaryVasTotal: val.valueAddedServices?.total,\n          ...val,\n        };\n      }\n      return {\n        summaryTotal: val.total,\n        summarySubtotal: val.subtotal,\n        summaryDiscountTotal: val.discountTotal,\n        summaryEstimatedTax: val.taxTotal,\n        summaryEstimatedShipping: val.shippingTotal,\n        summaryVasTotal: val.valueAddedServicesTotal,\n        ...val,\n      };\n    },\n  },\n);\n\nconst fulfillmentOfferingsSchema = new schema.Entity(\n  'fulfillmentOfferings',\n  {\n    cartReviews: {\n      response: {\n        fulfillmentGroups: [fulfillmentGroupSchema],\n        totals: cartTotals, // from cartReviews v2\n      },\n    },\n    items: [fulfillmentOfferingItem],\n    locations: [locationsSchema],\n    skuOfferings: [fulfillmentOfferingItem],\n    warnings: [warning],\n    promotionCodes: [promotionCodeSchema],\n  },\n  {\n    idAttribute: 'country',\n    processStrategy: value => ({\n      ...value,\n      items: value.items,\n      skuOfferings: value.items,\n    }),\n  },\n);\n\nconst fulfillmentTypesSchema = new schema.Entity('fulfillmentTypes', {}, { idAttribute: 'type' });\n\nconst availableFulfillmentTypesSchema = new schema.Entity(\n  'availableFulfillmentTypes',\n  {\n    fulfillmentOfferings: fulfillmentOfferingsSchema,\n    fulfillmentTypes: [fulfillmentTypesSchema],\n  },\n  { idAttribute: 'country' },\n);\n\nconst pickupOffering = new schema.Entity(\n  'pickupOfferings',\n  {},\n  {\n    idAttribute: value => value.location.id,\n  },\n);\n\nconst shipOffering = new schema.Entity(\n  'shipOfferings',\n  {},\n  {\n    idAttribute: (value, parent) => parent.skuId || parent.id,\n    processStrategy: val => [val],\n    mergeStrategy: (entityA, entityB) => [...entityA, ...entityB],\n  },\n);\nconst fulfillmentOfferingSchema = new schema.Union(\n  {\n    PICKUP: pickupOffering,\n    SHIP: shipOffering,\n  },\n  value => value.type,\n);\n\nconst persistedFulfillmentOfferingItem = new schema.Entity(\n  'persistedOfferingItems',\n  {\n    fulfillmentOfferings: [fulfillmentOfferingSchema],\n  },\n  {\n    // we will normalize by skuId AND item id to allow looking up by both\n    idAttribute: (value, parent, key) => {\n      return key === 'skuOfferings' ? value.skuId : value.id;\n    },\n  },\n);\n\nconst persistedFulfillmentOfferingsSchema = new schema.Entity(\n  'persistedFulfillmentOfferings',\n  {\n    cartReviews: {\n      response: {\n        fulfillmentGroups: [fulfillmentGroupSchema],\n        totals: cartTotals, // from cartReviews v2\n      },\n    },\n    items: [persistedFulfillmentOfferingItem],\n    locations: [locationsSchema],\n    skuOfferings: [persistedFulfillmentOfferingItem],\n    warnings: [warning],\n    promotionCodes: [promotionCodeSchema],\n  },\n  {\n    idAttribute: 'country',\n    processStrategy: value => ({\n      ...value,\n      items: value.items,\n      skuOfferings: value.items,\n    }),\n  },\n);\n\nconst persistedAvailableFulfillmentTypesSchema = new schema.Entity(\n  'persistedAvailableFulfillmentTypes',\n  {\n    fulfillmentOfferings: persistedFulfillmentOfferingsSchema,\n    fulfillmentTypes: [fulfillmentTypesSchema],\n  },\n  { idAttribute: 'country' },\n);\n\nconst shippingGroupSchema = new schema.Entity(\n  'shippingGroup',\n  {\n    items: [cartItem],\n  },\n  {\n    idAttribute: (val, parent) => val.shippingMethod?.id || parent?.country,\n  },\n);\n\nconst shippingOptionsSchema = new schema.Entity(\n  'shippingOptions',\n  {\n    totals: cartTotals, // from partnerCartReviews v1\n    shippingGroups: [shippingGroupSchema],\n    cartReviews: {\n      totals: cartTotals, // from cartReviews v1\n      shippingGroups: [shippingGroupSchema],\n    },\n  },\n  {\n    idAttribute: 'country', // NOTE because we don't attribute things via cart.id we have to normalize around common denominator\n  },\n);\n\nexport const cartSchema = new schema.Entity(\n  'cart',\n  {\n    items: [cartItem],\n    promotionCodesDetails: [promotionCodeSchema],\n  },\n  { idAttribute: 'country' }, // NOTE - we might want to do this off cart.id in the future, not necessary yet. Removing this option achieves that.\n);\n\n// NOTE we need availableVas by type and vas as is by id\nexport const dataSchema = {\n  cart: cartSchema,\n  cartItems: [cartItem],\n  fulfillmentOfferings: fulfillmentOfferingsSchema,\n  persistedFulfillmentOfferings: persistedFulfillmentOfferingsSchema,\n  shippingOptions: shippingOptionsSchema,\n  skus: [sku],\n  products: [product],\n  availableFulfillmentTypes: availableFulfillmentTypesSchema,\n  persistedAvailableFulfillmentTypes: persistedAvailableFulfillmentTypesSchema,\n  listItems: [listItem],\n  list,\n};\n","import mergeWith from 'lodash.mergewith';\n\n// NOTE secluding this function due to usage of lodash.mergeWith\n// talked to philip and came up with plan to do perf tickets later\n// tickets maybe to use `just-<func>` packages OR refactor our code where able\n\nconst mergeWithArrayMerge = (obj1, obj2) => {\n  if (Array.isArray(obj1)) {\n    return [...obj1, ...obj2];\n  }\n};\n\nconst deepStateMerge =\n  ({ state, nextState, keysToExclude, keysToMergeArrays }) =>\n  (prev, curr) => {\n    const mergeFunction = keysToMergeArrays.includes(curr) ? mergeWithArrayMerge : undefined;\n\n    const merged = mergeWith({}, state?.[curr] || {}, nextState[curr] || {}, mergeFunction);\n\n    return {\n      ...prev,\n      [curr]: keysToExclude.includes(curr) ? nextState[curr] : merged,\n    };\n  };\n\nexport default deepStateMerge;\n","import { SEARCH_DETAILS } from '../constants';\n\n/**\n * @function getSearchDetailsPostalCode\n * Returns the search details' postal code from local storage\n *\n * @returns {string} postalCode - The search details' postalcode retrieved from Location Search MFE's local storage\n */\n\nconst getSearchDetailsPostalCode = () => {\n  try {\n    const searchDetails = window.localStorage.getItem(SEARCH_DETAILS);\n    const { postCode: postalCode = '' } = JSON.parse(searchDetails);\n    return postalCode;\n  } catch (e) {\n    return '';\n  }\n};\n\nexport default getSearchDetailsPostalCode;\n","import getSearchDetailsPostalCode from './get-search-details-postal-code';\nimport getSelectedStoreLocationId from './get-selected-store-location-id';\n\n/**\n * @function getRetailMFELocationState\n * Returns the selected location and postal code from local storage\n * where the Retail MFE's set them (Store Selector and Location Search MFE)\n *\n * @returns {Object} locationState\n * @param {string} locationState.postalCode - The postal code retrieved from local storage\n * @property {string} locationState.locationId - The location id retrieved from local storage\n */\n\nconst getRetailMFELocationState = () => {\n  return {\n    postalCode: getSearchDetailsPostalCode(),\n    locationId: getSelectedStoreLocationId(),\n  };\n};\n\nexport default getRetailMFELocationState;\n","import { normalize } from 'normalizr';\nimport { combineReducers } from 'redux';\nimport foffJobsCrcCodes from '@nike/ux-tread-crc-code/lib/buy/fulfillment_offerings_jobs/v1/crcCodes';\nimport { FETCH_CARTS_FAILURE, FETCH_CARTS_SUCCESS } from '@nike/cart-constants';\nimport { INITIALIZE_WISHLIST_SUCCESS } from '@nike/wishlist-redux';\nimport { persistToLocalStorage, persistToSessionStorage } from '@nike/ux-tread-web-storage';\n\nimport {\n  ON_FETCH_START,\n  CLEAR_ERRORS,\n  CLOSE_SHOP_DIALOG,\n  ON_FETCH_FAILURE,\n  ON_FULFILLMENT_OFFERINGS_SUCCESS,\n  OPEN_SHOP_DIALOG,\n  UPDATE_ENTITIES,\n  UPDATE_SHARED_DATA,\n  UPDATE_USER_LOCATION_DATA,\n  ON_SHIPPING_OPTIONS_SUCCESS,\n  CLEAR_NORMALIZED_DATA,\n  CARTS_MERGED,\n} from './constants';\nimport { dataSchema } from './schemas';\nimport deepStateMerge from './deep-state-merge';\nimport getRetailMFELocationState from './experiments/mybag-3716-store_selector_mfe/utils/get-retail-mfe-location-state';\n\nexport const normalizeAndMergeState = ({\n  dataToNormalize = {},\n  state,\n  keysToExcludeFromMerge = [],\n  keysToMergeArrays = [],\n}) => {\n  // MYBAG-4090: Cleanup - Start\n  // Making a copy of the data so we can normalize it for our persisted f/offs schema\n  if (dataToNormalize.fulfillmentOfferings) {\n    dataToNormalize.persistedFulfillmentOfferings = dataToNormalize.fulfillmentOfferings;\n  }\n  if (dataToNormalize.availableFulfillmentTypes) {\n    dataToNormalize.persistedAvailableFulfillmentTypes = dataToNormalize.availableFulfillmentTypes;\n  }\n  // MYBAG-4090: Cleanup - End\n\n  const normalized = normalize(dataToNormalize, dataSchema);\n  const { result, entities } = normalized || {};\n  const { errors, data, ...rest } = entities || {};\n  const entitiesToMerge = Object.keys(rest).reduce(\n    deepStateMerge({\n      state,\n      nextState: rest,\n      keysToExclude: keysToExcludeFromMerge,\n      keysToMergeArrays,\n    }),\n    {},\n  );\n  return {\n    ...state,\n    ...entitiesToMerge,\n    result: {\n      ...state.result,\n      ...(result || {}),\n    },\n  };\n};\n\nconst errorsReducer = (state = [], action = {}) => {\n  switch (action.type) {\n    case ON_FETCH_FAILURE: {\n      return [\n        ...state,\n        {\n          code: action.payload?.code,\n          message: action.payload?.message,\n          crcCode: action.payload?.crcCode,\n          itemId: action.payload?.itemId,\n        },\n      ];\n    }\n    case CLEAR_ERRORS:\n      return [\n        ...state.filter(\n          // This error has UI associated with it. The user cannot clear this\n          // error without deliberately removing the offending item from their cart.\n          // Therefor, we can't delete this error from the local store and it must be\n          // removed with a successful API response\n          errorWarning => errorWarning.crcCode === foffJobsCrcCodes.FULFILLMENT_OFFERINGS_NOT_FOUND,\n        ),\n      ];\n    case ON_FULFILLMENT_OFFERINGS_SUCCESS:\n      return [\n        ...state.filter(\n          // If an F/Off API response comes back successful we must manually remove previous errors\n          errorWarning => errorWarning.crcCode !== foffJobsCrcCodes.FULFILLMENT_OFFERINGS_NOT_FOUND,\n        ),\n      ];\n\n    // If we keep around state from old f/off calls, we'll just accumulate a lot of errors.\n    // ON_FETCH_START can be triggered by other calls, but we'll regain errors from API responses.\n    case ON_FETCH_START:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nconst warningsReducer = (state = [], action = {}) => {\n  switch (action.type) {\n    case ON_FULFILLMENT_OFFERINGS_SUCCESS: {\n      return action.payload.fulfillmentOfferings?.warnings || [];\n    }\n    default:\n      return state;\n  }\n};\n\nconst sharedStateReducer = (state = {}, action = {}) => {\n  switch (action.type) {\n    case UPDATE_SHARED_DATA:\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/**\n * @function locationStateReconciler reconciles the location state from the Retail MFEs with the persisted values from our store\n * @param {Object} inboundState - persisted values from our store\n * @param {string} inboundState.postalCode\n * @param {string} inboundState.locationId\n * @returns {Object} reconciledState - the value that is rehydrated into our redux store. it is the Retail MFE\n * state if it exists, if not, it's our persisted store values\n * @returns {string} reconciledState.postalCode\n * @returns {string} reconciledState.locationId\n \n */\n/*\n * MYBAG-4016: We're only supporting our own persisted state to support MYBAG-3716's control variant. Once it is cleaned up and the\n * Store Selector MFE variant is promoted globally, we can just rely on reading from local storage directly and can\n * remove this from our redux store\n */\nconst locationStateReconciler = inboundState => {\n  const { postalCode, locationId } = getRetailMFELocationState();\n\n  // if we see values present in the MFE we default to those\n  // assumes postal code and location id default to empty string to maintain type consistency\n  if (postalCode || locationId) {\n    return { postalCode, locationId };\n  }\n  // if no values from the MFE's location state, then use our persisted values\n  return inboundState;\n};\n\nconst locationReducer = (state = {}, action = {}) => {\n  switch (action.type) {\n    case UPDATE_USER_LOCATION_DATA:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n\nconst shopUiReducer = (\n  state = {\n    isDialogOpen: false,\n  },\n  action = {},\n) => {\n  switch (action.type) {\n    case OPEN_SHOP_DIALOG:\n      return {\n        ...state,\n        ...action?.payload,\n        isDialogOpen: true,\n      };\n    case CLOSE_SHOP_DIALOG:\n      return {\n        ...state,\n        ...action?.payload,\n        isDialogOpen: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst shopAppReducer = (\n  state = {\n    wishlistInitialized: false,\n    cartFetched: false,\n  },\n  action = {},\n) => {\n  switch (action.type) {\n    case INITIALIZE_WISHLIST_SUCCESS:\n      return { ...state, wishlistInitialized: true };\n    case FETCH_CARTS_FAILURE:\n    case FETCH_CARTS_SUCCESS:\n      return { ...state, cartFetched: true };\n    case CARTS_MERGED:\n      return { ...state, cartsMerged: true };\n    default:\n      return state;\n  }\n};\n\nconst normalizedReducer = (state = { result: {} }, action = {}) => {\n  switch (action.type) {\n    case ON_FETCH_FAILURE: {\n      const partialError = action.payload?.data;\n      // because fetch client will return us normalized error shapes with data we can use that\n      // to recover any partial data response using payload.data.<entity>\n      return normalizeAndMergeState({ dataToNormalize: partialError?.data || partialError, state });\n    }\n\n    case ON_SHIPPING_OPTIONS_SUCCESS:\n    case ON_FULFILLMENT_OFFERINGS_SUCCESS:\n    case UPDATE_ENTITIES: {\n      // NOTE - need to enhance this area or move normalize function call to actions\n      // NOTE - flickers are being caused by a blanket merge here.. a deep merge would allow\n      // we want these values to be overwritten with each fetch of foffs, do not merge with current state\n      const keysToExcludeFromMerge = ['offeringItems', 'locations', 'list'];\n      const keysToMergeArrays = ['persistedOfferingItems'];\n      return normalizeAndMergeState({\n        dataToNormalize: action.payload,\n        state,\n        keysToExcludeFromMerge,\n        keysToMergeArrays,\n      });\n    }\n\n    case CLEAR_NORMALIZED_DATA:\n      return { result: {} };\n    default:\n      return state;\n  }\n};\n\nconst getAppliedPromoIdsFromCartReviewsItems = cartReviewsItems => {\n  const appliedPromoIds = cartReviewsItems\n    ?.map(\n      // left side of the ?? is for fulfillment offerings and the right side of the ?? is for shipping options\n      item => item?.itemCosts?.promotionDiscounts?.[0]?.id ?? item?.promotionDiscounts?.[0]?.id,\n    )\n    ?.filter(promoId => promoId !== undefined);\n  const appliedUniquePromoIds = [...new Set(appliedPromoIds)];\n\n  return appliedUniquePromoIds;\n};\n\nconst getCartReviewsItemsFromPayload = payload => {\n  // if storedOfferingTypes exists, then we are calling getfulfillmentofferingsandcartreviews/v7\n  // if storedOfferingTypes doesn't exist, then we are calling getfulfillmenttypesofferingsandcartreviews/v3\n  // pull cart reviews items from a different location depending on the endpoint\n  const cartReviewsItems = payload?.storedOfferingTypes\n    ? payload?.fulfillmentOfferings?.cartReviews?.response?.fulfillmentGroups?.[0]?.items\n    : payload?.availableFulfillmentTypes?.fulfillmentOfferings?.cartReviews?.response\n        ?.fulfillmentGroups[0]?.items;\n\n  return cartReviewsItems;\n};\n\nconst promosReducer = (state = {}, action = {}) => {\n  switch (action.type) {\n    case ON_FULFILLMENT_OFFERINGS_SUCCESS: {\n      const cartReviewsItem = getCartReviewsItemsFromPayload(action.payload);\n\n      return { ...state, appliedPromoIds: getAppliedPromoIdsFromCartReviewsItems(cartReviewsItem) };\n    }\n    case ON_SHIPPING_OPTIONS_SUCCESS: {\n      const items = action.payload?.shippingOptions?.cartReviews?.shippingGroups?.[0]?.items;\n\n      return { ...state, appliedPromoIds: getAppliedPromoIdsFromCartReviewsItems(items) };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  warnings: warningsReducer,\n  errors: errorsReducer,\n  location: persistToLocalStorage('location', locationReducer, {\n    stateReconciler: locationStateReconciler,\n  }),\n  normalized: persistToSessionStorage('normalized', normalizedReducer, {\n    blacklist: ['promoCodes', 'persistedOfferingItems'],\n  }),\n  ui: shopUiReducer,\n  app: shopAppReducer,\n  shared: persistToLocalStorage('shared', sharedStateReducer),\n  promos: promosReducer,\n});\n","/* istanbul ignore file */\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\n\nconst createPersistentStore = ({\n  reducers = {},\n  initialState = {},\n  middlewares = [],\n  enhancers = [],\n  options = {},\n} = {}) => {\n  const finalReducers = combineReducers({\n    ...reducers,\n  });\n  const composeEnhancers = composeWithDevTools({\n    name: 'NikeShop State',\n    trace: true,\n    traceLimit: 25,\n  });\n  const enhancer = composeEnhancers(\n    applyMiddleware(\n      thunk,\n      ...middlewares, // should allow adding additional middleware if needed\n    ),\n    ...enhancers, // should allow adding enhancers like dev tools if needed while implementing\n  );\n\n  const store = createStore(finalReducers, initialState, enhancer);\n  const persistor = persistStore(store, null, () => {\n    store.getState();\n  });\n\n  if (options.shouldPurgeWebStorage) {\n    persistor.purge();\n  }\n\n  return {\n    persistor,\n    store,\n  };\n};\n\nexport default createPersistentStore;\n","import { addPageAction } from '@nike/ux-tread-new-relic';\n\n/**\n * @ignore\n * wrapped addPageAction with version\n * @param {string} actionName - name of the new relic page action to send\n * @param {string} version - instantiated version of this module\n * @returns {undefined} async call with no return value\n */\n// maybe swap page action title\nexport default function onErrorCallback(actionName, version) {\n  return addPageAction(actionName, {\n    version,\n  });\n}\n","export default (address, country) => {\n  const isJpOrCn = country === 'JP' || country === 'CN'; // TODO MYBAG-2430 and MYBAG-2431 this needs to be addressed\n  if (isJpOrCn || address?.country !== country) {\n    return { country };\n  }\n  return address;\n};\n","import {\n  CART_COUNT_UPDATED_EVENT_NAME,\n  LOCATION_UPDATED_EVENT_NAME,\n  UPDATED_SHOP_DATA_EVENT,\n  MERGED_CARTS_EVENT,\n} from '@nike/custom-event-names';\nimport { CART_STATE_KEY } from '@nike/cart-constants';\n\nimport {\n  CLOSE_SHOP_DIALOG,\n  OPEN_SHOP_DIALOG,\n  UPDATE_USER_LOCATION_DATA,\n  SHOP_STATE_KEY,\n  UPDATE_ENTITIES,\n} from './constants';\nimport { PICKUP_OFFERINGS_VIEWED } from './analytics/constants';\nimport dispatchCustomEvent from './dispatch-custom-event';\nimport createCustomEvent from './create-custom-event';\nimport onErrorCallback from './on-error-callback';\nimport determineAddressVsCountry from './determine-address-vs-country';\nimport trackEvent from './track-event';\nimport getPickupOfferingStatus from './get-pickup-offering-status';\nimport determinePostalCode from './business-logic/determine-postal-code';\n\n// This module will be used after Design/UX decide how to handle location data\n// import getEstimatedLocation from './get-estimated-location';\n\n/**\n * The NikeShop class creates a singleton instance per load via nike-shop-client, exposing some public methods that client experiences can use to interface with apis related to shopping\n *\n * @class\n */\nexport default class NikeShop {\n  constructor(props) {\n    this.store = props.store;\n    this.language = props.language;\n    this.country = props.country?.toUpperCase();\n    this.featureFlags = props.featureFlags;\n  }\n\n  #queryClient = null;\n\n  /**\n   * @memberof NikeShop\n   * @name NikeShop.getVersion\n   * @returns {string} the page instantiated script's module version\n   */\n  getVersion = () => this.version;\n  // maybe we change this to be an abstraction for our telemetry method in the future but for now it gives us a way to get\n  // the right version each time.\n  onErrorUniteCallback = () => onErrorCallback('nike-shop-unite-failure', this.getVersion());\n  onErrorShellIdentityCallback = () =>\n    onErrorCallback('nike-shop-shell-identity-failure', this.getVersion());\n\n  /**\n   * @memberof NikeShop\n   * @name NikeShop.addToCart\n   * @description add to a user cart with skuId or skuId and designViewId. For additional arguments see reference:\n   * @see {@link https://github.com/nike-internal/dotcom.shop-modules/tree/main/packages/ux-tread-cart-redux#addtocart}\n   *\n   * @param {object} params - named parameters\n   * @param {string} params.skuId - a valid sku uuid\n   * @param {number} [params.quantity=1] - optional quantity for skuId to add to cart, defaults to 1\n   * @param {string} [params.designViewId] -  optional unique identifiers for any customization items.\n   * @param {Array} [params.designViewIds] - array of unique identifiers for any customization items.\n   * @param {{ amount: number }} [params.giftCard] - optional gift card object with amount\n   * @param {boolean} [params.isDigitalGiftCard] - optional is digital gift card\n   * @param {boolean} [params.isPhysicalGiftCard] - optional is physical gift card\n   * @param {string}  [params.offer] - optional UUID for exclusive access offer\n   * @param {Array<{ id: string, type: string}>}  [params.offers] - optional offers for ExAx and NCP. This section is not intended for CN\n   * @param {{ firstName: string, lastName: string }} [params.recipient] - optional object containing gift card recipient with firstName and lastName\n   * @param {string} [params.recipientEmailAddress] - optional gift card recipient's email\n   * @param {string} [params.shippingMethod] - optional shipping method for a gift card\n   * @param {Array<{ id: string, instruction: { id: string, type: string }}>} [params.valueAddedServices] - optional vas info for item\n   *\n   * @returns {Promise} thenable result\n   */\n  addToCart = ({ quantity = 1, ...args }) =>\n    import(/* webpackChunkName: \"addToCart\" */ './actions/add-to-cart').then(mod => {\n      const { default: addToCart } = mod;\n      return this.store.dispatch(addToCart({ quantity, ...args }));\n    });\n\n  addPromotionCode = (args = {}) =>\n    import(/* webpackChunkName: \"addPromotionCode\" */ './actions/add-promotion-code').then(mod => {\n      const { default: addPromotionCode } = mod;\n      return this.store.dispatch(addPromotionCode(args));\n    });\n  removePromotionCodes = (args = {}) =>\n    import(/* webpackChunkName: \"removePromotionCodes\" */ './actions/remove-promotion-codes').then(\n      mod => {\n        const { default: removePromotionCodes } = mod;\n        return this.store.dispatch(removePromotionCodes(args));\n      },\n    );\n  /**\n   * @memberof NikeShop\n   * @name NikeShop.addToWishlist\n   * @description add a product with a valid productId, and optional skuId to a user's default wishlist. If the default wishlist doesn't exist this function will ensure creating one prior to the add.\n   *\n   * @see {@link https://github.com/nike-internal/dotcom.shop-modules/tree/main/packages/wishlist-redux#initializewishlistandaddtocart}\n   * @returns {Promise} thenable result\n   */\n  addToWishlist = (args = {}) =>\n    import(/* webpackChunkName: \"addToWishlist\" */ './actions/add-to-wishlist').then(mod => {\n      const { default: addToWishlist } = mod;\n      return this.store.dispatch(addToWishlist(args));\n    });\n\n  addToCartFromWishlist = (args = {}) =>\n    import(\n      /* webpackChunkName: \"addToCartFromWishlist\" */ './actions/add-to-cart-from-wishlist'\n    ).then(mod => {\n      const { default: addToCartFromWishlist } = mod;\n      return this.store.dispatch(addToCartFromWishlist(args));\n    });\n  addToWishlistFromCart = (args = {}) =>\n    import(\n      /* webpackChunkName: \"addToWishlistFromCart\" */ './actions/add-to-wishlist-from-cart'\n    ).then(mod => {\n      const { default: addToWishlistFromCart } = mod;\n      return this.store.dispatch(addToWishlistFromCart(args));\n    });\n  removeItemsFromWishlist = (args = {}) =>\n    import(\n      /* webpackChunkName: \"removeItemsFromWishlist\" */ './actions/remove-items-from-wishlist'\n    ).then(mod => {\n      const { default: removeItemsFromWishlist } = mod;\n      return this.store.dispatch(removeItemsFromWishlist(args));\n    });\n\n  /**\n   * @memberof NikeShop\n   * @name NikeShop.updateCart\n   * @description allows merging carts and patch update the cart with an items array\n   * @see {@link https://github.com/nike-internal/dotcom.shop-modules/tree/main/packages/ux-tread-cart-redux#updateCart}\n   * @returns {Promise} thenable result\n   */\n  // updateCart = (args = {}) => this.store.dispatch(updateCart(args)); // NOTE I only found us using it for addToCartFromWishlist\n  updateCartItem = (args = {}) =>\n    import(/* webpackChunkName: \"updateCartItem\" */ './actions/update-cart-item').then(mod => {\n      const { default: updateCartItem } = mod;\n      return this.store.dispatch(updateCartItem(args));\n    });\n  updateListItem = (args = {}) =>\n    import(/* webpackChunkName: \"updateListItem\" */ './actions/update-list-item').then(mod => {\n      const { default: updateListItem } = mod;\n      return this.store.dispatch(updateListItem(args));\n    });\n  fetchMoreListItems = (args = {}) =>\n    import(/* webpackChunkName: \"fetchMoreListItems\" */ './actions/fetch-more-list-items').then(\n      mod => {\n        const { default: fetchMoreListItems } = mod;\n        return this.store.dispatch(fetchMoreListItems(args));\n      },\n    );\n  /**\n   * @memberof NikeShop\n   * @name NikeShop.fetchCart\n   * @description fetch a user's cart\n   * @see {@link https://github.com/nike-internal/dotcom.shop-modules/tree/main/packages/ux-tread-cart-redux#fetchCart}\n   * @returns {Promise} thenable result\n   */\n  fetchCart = (args = {}) =>\n    import(/* webpackChunkName: \"fetchCart\" */ './actions/fetch-cart').then(mod => {\n      const { default: fetchCart } = mod;\n      return this.store.dispatch(fetchCart(args));\n    });\n  mergeCarts = (args = {}) =>\n    import(/* webpackChunkName: \"mergeCarts\" */ './actions/merge-carts').then(mod => {\n      const { default: mergeCarts } = mod;\n      return this.store.dispatch(mergeCarts(args));\n    });\n  /**\n   * Please avoid using this as this will be shortly removed and internalized. Consumers most likely want to use NikeShop.fetchMoreListItems\n   * @deprecated\n   * @param {*} args\n   * @returns {Promise} thenable result\n   */\n  initializeWishlist = (args = {}) =>\n    import(/* webpackChunkName: \"initializeWishlist\" */ './actions/initialize-wishlist').then(\n      mod => {\n        const { default: initializeWishlist } = mod;\n        return this.store.dispatch(initializeWishlist(args));\n      },\n    );\n  removeItemFromCart = (args = {}) =>\n    import(/* webpackChunkName: \"removeItemFromCart\" */ './actions/remove-item-from-cart').then(\n      mod => {\n        const { default: removeItemFromCart } = mod;\n        return this.store.dispatch(removeItemFromCart(args));\n      },\n    );\n\n  /**\n   * @memberof NikeShop\n   * @name NikeShop.getFulfillmentOfferings\n   * @description returns a Promise that handles calling services for fulfilment offerings\n   * @param {object} params - named parameters\n   * @param {string} [params.appId = DOTCOM_UX_ID] - AppId for nike.com (uxid from unite)\n   * @param {string} params.appName - App name included in request headers\n   * @param {string} [params.cloudStack = 'production'] - cloud stack header\n   * @param {string} params.email - users email to go with the async request\n   * @param {boolean} params.isCached - should use async fulfillment offering call\n   * @param {boolean} [params.isSearch = false] - whether or not to search an area for stores for pickup\n   * @param {string} params.locationId - optional location identifier, unique storeId or locationId\n   * @param {string} params.locationType - optional the type of location for the locationId, required if locationId is present, store/store_views, ship/pickup_points, location/pick_up_locations\n   * @param {Array.<string>} params.offeringTypes - required list of fulfillment offering types to be included, SHIP, PICKUP, INSTORE\n   * @param {string} params.productId - required product identifier, unique UUID of the product\n   * @param {number} [params.distance = 50] - radius distance to search for stores, defaults to 50 miles for MVP.\n   * @param {number} [params.timeout = 30000] - optional time to timeout underlying async job api call. Only applies when isCached is false.\n   * @returns {Promise}  Result of fulfillment offerings\n   *\n   * @example <caption>Cached fetchFulfillmentOfferings</caption>\n   *  NikeShop.getFulfillmentOfferings({\n   *    isCached:true,\n   *    productId:'38e0f7bd-fca8-5ad5-93f2-7ba884b7283d',\n   *  })\n   * @example <caption>Cached fetchFulfillmentOfferings for digital only</caption>\n   *  NikeShop.getFulfillmentOfferings({\n   *    isCached:true,\n   *    productId:'some-digital-gift-card-productId',\n   *    offeringTypes: ['DIGITAL'],\n   *  })\n   * @example <caption>Async fetchFulfillmentOfferings</caption>\n   *  NikeShop.getFulfillmentOfferings({\n   *    appName:'cart',\n   * })\n   */\n  getFulfillmentOfferings = (params = {}) =>\n    import(\n      /* webpackChunkName: \"fetchFulfillmentOfferings\" */ './actions/fetch-fulfillment-offerings'\n    ).then(mod => {\n      const { default: fetchFulfillmentOfferings } = mod;\n\n      return this.internalStore.dispatch(fetchFulfillmentOfferings(params)).then(resp => {\n        dispatchCustomEvent(\n          createCustomEvent(this.get()?.events?.sharedDataUpdated, {\n            bubbles: false,\n            detail: {\n              offeringItems: this.get()?.offeringItems,\n            },\n          }),\n        );\n        return resp;\n      });\n    });\n\n  /**\n   * @memberof NikeShop\n   * @name NikeShop.getFulfillmentOfferingsCartReviews\n   * @description returns a Promise that handles fulfilment offerings + cart reviews\n   *\n   * @param {object} [params={}] - optional named parameters\n   * @param {number} [params.distance = 50] - radius distance to search for stores, defaults to 50 miles for MVP\n   * @param {string} params.email - users email to go with the async request\n   * @param {boolean} [params.isSearch = false] - whether or not to search an area for stores for pickup\n   * @param {Array.<string>} [params.offeringTypes = ['SHIP', 'PICKUP', 'DIGITAL']] - required list of fulfillment offering types to be included. SHIP, PICKUP, DIGITAL, or INSTORE\n   * @param {number} [params.timeout = 30000] - optional time to timeout underlying async job api call\n   * @returns {Promise}  Result of fulfillment offerings and cart reviews\n   */\n  getFulfillmentOfferingsCartReviews = (params = {}) =>\n    import(\n      /* webpackChunkName: \"getFulfillmentOfferingsCartReviews\" */ './actions/fetch-fulfillment-offerings-cart-reviews'\n    ).then(mod => {\n      const { default: fetchFulfillmentOfferingsCartReviews } = mod;\n      return this.internalStore.dispatch(fetchFulfillmentOfferingsCartReviews(params));\n    });\n\n  getShippingOptionsCartReviews = (params = {}) =>\n    import(\n      /* webpackChunkName: \"getShippingOptionsCartReviews\" */ './actions/fetch-shipping-options-cart-reviews'\n    ).then(mod => {\n      const { default: fetchShippingOptionsCartReviews } = mod;\n      return this.internalStore.dispatch(fetchShippingOptionsCartReviews(params));\n    });\n\n  navigateToCheckout = (params = {}) =>\n    import(/* webpackChunkName: \"navigateToCheckout\" */ './actions/navigate-to-checkout').then(\n      mod => {\n        const { default: navigateToCheckout } = mod;\n        return this.internalStore.dispatch(navigateToCheckout(params));\n      },\n    );\n\n  /**\n   * @public\n   * @memberof NikeShop\n   * @name NikeShop.toggleDialog\n   * @returns {undefined} toggles ShopDialog open and close\n   */\n  toggleDialog = ({\n    itemId,\n    skuId,\n    productId,\n    showPickupIneligibleMessage,\n    fulfillmentType = 'SHIP',\n  } = {}) => {\n    const isOpen = this.internalStore.getState()?.ui?.isDialogOpen;\n\n    if (fulfillmentType === 'PICKUP') {\n      trackEvent(\n        PICKUP_OFFERINGS_VIEWED,\n        { fulfillment: { pickupOfferingStatus: getPickupOfferingStatus(itemId) } },\n        {\n          usePageAction: true,\n        },\n      );\n    }\n\n    return this.internalStore.dispatch({\n      type: isOpen ? CLOSE_SHOP_DIALOG : OPEN_SHOP_DIALOG,\n      payload: {\n        itemId,\n        skuId,\n        productId,\n        showPickupIneligibleMessage,\n        fulfillmentType,\n      },\n    });\n  };\n\n  fetchProductDetails = (params = {}) =>\n    import(/* webpackChunkName: \"fetchProductDetails\" */ './actions/fetch-product-details').then(\n      mod => {\n        const { default: fetchProductDetails } = mod;\n        return this.internalStore.dispatch(fetchProductDetails(params));\n      },\n    );\n\n  /**\n   * @memberof NikeShop\n   * @name NikeShop.getProductsInFavorites\n   * @description Returns all products that are in a user's favorites list\n   *\n   * @param {Array.<{productId: string, skuId: ?string}>} products list of products by their id and sku id\n   * @returns {Promise} Resulting list of favorited product ids and their associated sku ids. Items that have null for a sku id indicate user has added the item without a size\n   *\n   */\n  getProductsInFavorites = products =>\n    import(/* webpackChunkName: \"getProductsInFavorites\" */ './diff-favorites-from-products').then(\n      mod => {\n        const { default: diffFavoritesFromProducts } = mod;\n        const items =\n          this.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.list?.[this.country]?.items;\n        return diffFavoritesFromProducts(products, items);\n      },\n    );\n\n  /**\n   * @memberof NikeShop\n   * @name NikeShop.get\n   * @returns {NikeShopAccessors} - properties available on object returned by NikeShop.get for consumers of nike-shop-client to use\n   *\n   * @example <caption>Using accessors for supported values</caption>\n   * const cartCount = NikeShop.get().totalCartQuantity;\n   * const cartHref = NikeShop.get().cartHref;\n   *\n   * @example <caption>Using event listeners and preferred pickup location</caption>\n   * window.addEventListener(NikeShop.get().events.locationUpdated, ({ detail }) => {\n   *   const { postalCode, locationId } = detail;\n   *   if(locationId) {\n   *     const storeName = NikeShop.get().preferredPickupLocation.name\n   *     ...\n   *    }\n   * });\n   */\n  get = () => {\n    const country = this.country;\n    const locationId = this.internalStore.getState()?.[SHOP_STATE_KEY]?.location?.locationId || '';\n\n    return {\n      country,\n      postalCode: determinePostalCode({\n        userLocationPostalCode:\n          this.internalStore?.getState()?.[SHOP_STATE_KEY]?.location?.postalCode,\n        profileAddressPostalCode: this.#queryClient?.getQueryData(['profileAddress'])?.postalCode,\n      }),\n      locationId,\n      locations:\n        this.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.locationSearchResults || {},\n      preferredAddress: determineAddressVsCountry(\n        this.#queryClient?.getQueryData(['profileAddress']),\n        country,\n      ),\n      preferredPickupLocation:\n        this.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.locationSearchResults?.[\n          locationId\n        ]?.details || {},\n      promoCodes: this.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.promoCodes || {},\n      cartItems: this.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.cartItems || {},\n      cart: {\n        id: this.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.cart?.[country]?.id,\n        items: this.store.getState()?.[CART_STATE_KEY]?.cart?.items || [],\n        currency:\n          this.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.cart?.[country]?.currency,\n      },\n      list: {\n        id: this.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.list?.[country]?.id,\n        name: this.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.list?.[country]?.name,\n        listItems: this.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.listItems,\n      },\n      vas: this.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.vas || {},\n      cartTotals:\n        this.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.cartTotals?.[country],\n      errors: this.internalStore.getState()?.[SHOP_STATE_KEY]?.errors || [],\n      warnings: this.internalStore.getState()?.[SHOP_STATE_KEY]?.warnings || [],\n      offeringItems:\n        this.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.offeringItems || {},\n      fulfillmentTypes: this.internalStore\n        .getState()\n        ?.[SHOP_STATE_KEY]?.normalized?.availableFulfillmentTypes?.[\n          country\n        ]?.fulfillmentTypes?.filter(type => type !== 'INSTORE'),\n      availableVas: this.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.availableVas || {},\n      events: {\n        locationUpdated: LOCATION_UPDATED_EVENT_NAME,\n        sharedDataUpdated: UPDATED_SHOP_DATA_EVENT,\n        mergedCarts: MERGED_CARTS_EVENT,\n        cartCountUpdated: CART_COUNT_UPDATED_EVENT_NAME,\n        listsInitialized: '@nikeShopEvents/listsInitialized',\n      },\n      cartHref: this.internalStore.getState()?.[SHOP_STATE_KEY]?.shared?.cartHref,\n      favoritesHref: this.internalStore.getState()?.[SHOP_STATE_KEY]?.shared?.favoritesHref,\n      checkoutHref: this.internalStore.getState()?.[SHOP_STATE_KEY]?.shared?.checkoutHref,\n      totalCartQuantity:\n        this.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.cart?.[country]?.totals\n          ?.quantity,\n    };\n  };\n\n  set = (key, params) => {\n    switch (key) {\n      case 'cartItems': {\n        return this.internalStore.dispatch({\n          type: UPDATE_ENTITIES,\n          payload: { cart: params },\n        });\n      }\n      case 'listItems': {\n        return this.internalStore.dispatch({\n          type: UPDATE_ENTITIES,\n          // payload: { listItems: Object.keys(params).map(id => ({ id, ...params[id] })) }, // or just refactor the wishlistredux module\n          payload: { listItems: params },\n        });\n      }\n      case 'queryClient': {\n        this.#queryClient = params;\n        break;\n      }\n\n      default:\n        return null;\n    }\n  };\n\n  updateStore = ({ store, internalStore }) => {\n    this.store = store || this.store;\n    this.internalStore = internalStore || this.internalStore;\n  };\n\n  updateUserLocation = ({ postalCode, locationId }) => {\n    const payload = {\n      ...(postalCode && { postalCode }),\n      locationId,\n    };\n\n    dispatchCustomEvent(\n      createCustomEvent(this.get().events?.locationUpdated, {\n        bubbles: false,\n        detail: payload,\n      }),\n    );\n    return this.internalStore.dispatch({\n      type: UPDATE_USER_LOCATION_DATA,\n      payload,\n    });\n  };\n}\n","// NOTE - this needs to be moved into ux-tread-cart-redux (partnercart-redux should be folded into cart-redux, but keep tread-partnercart separate)\nimport { createSelector } from 'reselect';\nimport getFilteredCartErrors from './get-filtered-cart-errors';\nimport getFilteredCartWarnings from './get-filtered-cart-warnings';\n\nconst getHasCartErrorsOrWarnings = createSelector(\n  getFilteredCartErrors,\n  getFilteredCartWarnings,\n  (errors, warnings) => errors.length > 0 || warnings.length > 0,\n);\n\nexport default getHasCartErrorsOrWarnings;\n","/**\n * @private\n * @ignore\n * observes different redux stores to act on actions and state derived from them\n * @param {object} store - a redux store\n * @param {Function} onChange - a callback function that is invoked when state changes\n * @returns {Function} the unsubscribe function for the store that is passed in\n */\nexport default function observeStore(store, onChange) {\n  let currentState;\n\n  /**\n   * @private\n   * @ignore\n   * @returns {undefined} closure that invokes the onChange callback passed in\n   */\n  function handleChange() {\n    const nextState = store.getState();\n    if (nextState !== currentState) {\n      currentState = nextState;\n      onChange(currentState);\n    }\n  }\n\n  const unsubscribe = store.subscribe(handleChange);\n  handleChange();\n  return unsubscribe;\n}\n","import identity from './identity';\nimport { CARTS_MERGED } from './constants';\n\nconst initializeUser = async ({ onCartUpdate, fetchCartCallback = identity, shopInstance }) => {\n  const isLoggedIn = await window.webShellClient.identity.getIsLoggedIn();\n\n  if (isLoggedIn) {\n    await window.NikeShop.mergeCarts();\n    await onCartUpdate();\n\n    shopInstance.internalStore.dispatch({ type: CARTS_MERGED });\n    window.NikeShop.initializeWishlist();\n  }\n\n  fetchCartCallback();\n};\n\nexport default initializeUser;\n","import identity from './identity';\n\nconst onCartUpdateSideEffects = ({ cart, list }, callback) => {\n  const updateAccessors = window?.NikeShop?.set || identity;\n  if (cart?.cart) {\n    updateAccessors('cartItems', cart?.cart);\n  }\n  if (list?.listItems?.objects) {\n    updateAccessors('listItems', list?.listItems?.objects);\n  }\n\n  if (callback) {\n    callback({ cart, list });\n  }\n  return { cart, list };\n};\n\nexport default onCartUpdateSideEffects;\n","import { getDocumentLocation } from '@nike/ux-tread-dotcom-utils';\n\nconst appendToHref = pathParameter => {\n  const { href } = getDocumentLocation();\n  return href.charAt(href.length - 1) === '/'\n    ? `${href}${pathParameter}`\n    : `${href}/${pathParameter}`;\n};\n\nexport default appendToHref;\n","import { getCartQuantity, ON_INIT_CART } from '@nike/ux-tread-cart-redux';\nimport { WISHLIST_STATE_KEY } from '@nike/wishlist-redux';\nimport { toggleBodyOverflow } from '@nike/ux-tread-dotcom-utils';\n\nimport { CART_COUNT_UPDATED_EVENT_NAME, UPDATED_SHOP_DATA_EVENT } from '@nike/custom-event-names';\nimport { addPageAction } from '@nike/ux-tread-new-relic';\nimport { CART_STATE_KEY } from '@nike/cart-constants';\n\nimport { HOST_NAME, UPDATE_SHARED_DATA } from './constants';\nimport getHasCartErrorsOrWarnings from './selectors/get-has-cart-errors-or-warnings';\nimport observeStore from './observe-store';\n\nimport dispatchCustomEvent from './dispatch-custom-event';\nimport createCustomEvent from './create-custom-event';\nimport initializeUser from './initialize-user';\nimport onCartUpdateSideEffects from './on-cart-update-side-effects';\nimport getShellLocale from './get-shell-locale';\nimport appendToHref from './append-to-href';\n\n// NOTE - inside this function is also possibly where our interaction with CS user (admin vs unite) will come into play\nexport default async function initUserAndObserveStore({\n  shopInstance,\n  onCartUpdateCallback,\n  fetchCartCallback,\n  useListeners,\n  errorsToExclude,\n  warningsToInclude,\n  startTime,\n}) {\n  try {\n    // initialize web shell client identity\n    await window?.webShellClient?.identity.initialize({ isClient: true });\n    // we are going to set a variable for the default start of cartCount (events, observer also need this)\n    let cartCount = 0;\n    const { visitorId } = (await window?.webShellClient?.identity.getVisitData()) || {};\n    const token = await window?.webShellClient?.identity.getAccessToken();\n    const userProfile = await window?.webShellClient?.identity.getUserProfile();\n    const isLoggedIn = await window.webShellClient.identity.getIsLoggedIn();\n    const userType = userProfile?.userType;\n\n    addPageAction('nike-shop-shell-identity-event', {\n      version: window?.NikeShop?.version,\n      loadTime: Date.now() - startTime,\n      status: 'Initialized',\n      userType,\n    });\n\n    let attempted = false;\n    // NOTE not setting hrefs here by default as we need to know to do it once only\n    let cartHref = '';\n    let favoritesHref = '';\n    let checkoutHref = '';\n    const locale = getShellLocale();\n    const langLocale = locale?.langRegion?.toLowerCase().replace('-', '_'); // NOTE This is due to cart-redux and when we clean it up there we can clean it up here\n    const localeForCurrency = locale?.hreflang;\n    // NOTE this is to fix dotcomNav from our end, will need to go away once we clean up consumer used code\n    shopInstance.store.dispatch({\n      type: ON_INIT_CART,\n      payload: { country: shopInstance.country },\n      meta: {\n        langLocale,\n        localeForCurrency,\n        currency: locale?.currency,\n        isLoggedIn: isLoggedIn,\n      },\n    });\n\n    observeStore(shopInstance.store, state => {\n      // determine if cart is initialized already\n      const nextCartCount = getCartQuantity(shopInstance.store.getState());\n\n      // The following check is to ensure that we have not already set the href values as they start out empty\n      if (!cartHref) {\n        // NOTE locale itself can be an empty object if there are geoloc cookie mismatches via nav..\n        // so we are checking for a value we need for translations and we expect to have with locale data\n        if (locale?.hreflang) {\n          const urlLocale = locale?.cloudUrlFragment;\n          const urlLocaleFragment = urlLocale ? `/${urlLocale}/` : '/';\n          cartHref = `https://${HOST_NAME}${urlLocaleFragment}cart`;\n          favoritesHref = `https://${HOST_NAME}${urlLocaleFragment}favorites`;\n          checkoutHref = `https://${HOST_NAME}${urlLocaleFragment}checkout`;\n        } else {\n          // NOTE rather than setting these values by default we only fall back to shaping the hrefs if we are missing the locale information necessary\n          cartHref = appendToHref('cart');\n          favoritesHref = appendToHref('favorites');\n          checkoutHref = appendToHref('checkout');\n        }\n        // set the user to our own internal state to consistently lookup internally\n        const payload = {\n          ...locale,\n          cartHref,\n          favoritesHref,\n          checkoutHref,\n        };\n        shopInstance.internalStore.dispatch({\n          type: UPDATE_SHARED_DATA,\n          payload,\n        });\n        if (useListeners) {\n          const updatedSharedDataEvent = createCustomEvent(UPDATED_SHOP_DATA_EVENT, {\n            bubbles: true,\n            detail: { cartHref, favoritesHref, checkoutHref },\n          });\n          dispatchCustomEvent(updatedSharedDataEvent);\n        }\n      }\n\n      // We need to fetch cart at least ONCE and so if nothing outside has fetched cart we'll do this here.\n      // However since we ourselves are invoking fetchCart, when no config is set you might fetch multiple times\n      // inside the observer before the config gets set. We are using the `attempted` variable to keep track.\n      if (!attempted && (token || visitorId)) {\n        attempted = true;\n        // fetch and initialize cart if is has not already been done\n        fetchCartCallback();\n      }\n\n      if (cartCount !== nextCartCount) {\n        cartCount = getCartQuantity(shopInstance.store.getState());\n\n        // NOTE: When GLOBAL NAV starts to use our custom event,\n        // We need to check with Greg about removing the nav portion inside the sideeffect function\n        onCartUpdateSideEffects({\n          cart: shopInstance.store.getState()[CART_STATE_KEY],\n          list: shopInstance.store.getState()[WISHLIST_STATE_KEY],\n        });\n\n        // We are not ready to put this out there openly but custom event dispatching can be an alternate way\n        // and potentially future way of how we communicate updates to other apps. Flagged behind useListeners currently.\n        // However we can introduce it into the codebase for testing in dark prod and on other apps.\n        if (useListeners) {\n          const cartCountEvent = createCustomEvent(CART_COUNT_UPDATED_EVENT_NAME, {\n            bubbles: true,\n            detail: { cartCount },\n          });\n          dispatchCustomEvent(cartCountEvent);\n        }\n      }\n\n      // check if there are any errors\n      const hasCartErrors = getHasCartErrorsOrWarnings(state, {\n        errorsToExclude,\n        warningsToInclude,\n      });\n\n      // toggleBodyOverflow will turn on and off based on if there are errors\n      toggleBodyOverflow(hasCartErrors);\n    });\n\n    initializeUser({\n      onCartUpdate: onCartUpdateCallback,\n      fetchCartCallback,\n      shopInstance,\n    });\n  } catch (error) {\n    return shopInstance.onErrorShellIdentityCallback();\n  }\n}\n","import getStaticData from '@nike/get-static-data';\nimport { addPageAction } from '@nike/ux-tread-new-relic';\n\n// `actionName` is from newrelic syntax for PageActions\nconst ACTION_NAMES = {\n  localeSetPreviously: 'nike-shop-locale-set-previously',\n  localeSet: 'nike-shop-locale-set',\n  localeFailure: 'nike-shop-locale-failure',\n  localePoc: 'nike-shop-shell-client-locale-poc',\n};\n\nconst trackLocale = ({\n  actionName,\n  country,\n  language,\n  webShellLocale,\n  fallbackLocale,\n  startTime,\n}) => {\n  return addPageAction(actionName, {\n    version: window?.NikeShop?.version,\n    loadTime: Date.now() - startTime,\n    requestedCountry: country,\n    requestedLanguage: language,\n    webShellLocaleCountry: webShellLocale?.country,\n    webShellLocaleLanguage: webShellLocale?.language,\n    webShellLocaleUrlFragment: webShellLocale?.cloudUrlFragment,\n    fallbackCountry: fallbackLocale?.country,\n    fallbackLanguage: fallbackLocale?.language,\n    fallbackUrlFragment: fallbackLocale?.cloudUrlFragment,\n  });\n};\nconst setupLocaleData = ({ country, language, startTime }) => {\n  const webShellLocale = window?.webShellClient?.locale?.get();\n  const fallbackLocale = window?.nikeShopShellProxy?.locale;\n  const lowerCasedCountry = country?.toLowerCase();\n  if (webShellLocale?.country === lowerCasedCountry) {\n    // NOTE we were previously tracking this way below in the then statement but when we moved it up here we forgot(?) the tracking code\n    trackLocale({\n      actionName: ACTION_NAMES.localePoc,\n      country,\n      language,\n      webShellLocale,\n      fallbackLocale,\n      startTime,\n    });\n    // NOTE we don't do anything with this returned data but it should be a promise\n    // to match the returns in the other conditions.\n    // Returning a non-promise may bite us later\n    return Promise.resolve(webShellLocale);\n  }\n  // we will eventually want to instantiate locale based on window.shell.locale\n  // but until then we can progress our current codebase with a proxy global that functions the same way\n  const shellProxy = (typeof window !== 'undefined' && window?.nikeShopShellProxy) || {};\n  const locale = shellProxy?.locale;\n  Object.defineProperty(window, 'nikeShopShellProxy', { value: shellProxy });\n\n  if (locale) {\n    // NOTE we should see if this is accurate and how many times webshelllocale might exist but not match\n    trackLocale({\n      actionName: ACTION_NAMES.localeSetPreviously,\n      country,\n      language,\n      webShellLocale,\n      fallbackLocale: locale,\n      startTime,\n    });\n    return Promise.resolve(locale);\n  }\n\n  return getStaticData({\n    resourcePath: 'experience/pet',\n    resource: 'locale-data',\n    file: `${lowerCasedCountry}__${language}`,\n  })\n    .then(data => ({ ...data, ready: true })) // NOTE I don't think we need to do the ready anymore\n    .catch(() => {\n      // in case there are failures happening we should track and address (now and later with shell.locale as well)\n      trackLocale({\n        actionName: ACTION_NAMES.localeFailure,\n        country,\n        language,\n        webShellLocale,\n        fallbackLocale,\n        startTime,\n      });\n\n      return { ready: true, country, language };\n    })\n    .then(({ ready, ...localeData }) => {\n      // we can track how much this is actually costing us\n      shellProxy.locale = localeData;\n      trackLocale({\n        actionName: ACTION_NAMES.localeSet,\n        country,\n        language,\n        webShellLocale,\n        fallbackLocale: localeData,\n        startTime,\n      });\n      return { ready, ...localeData };\n    });\n};\n\nexport default setupLocaleData;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { addCartReducer } from '@nike/ux-tread-cart-redux';\nimport { addWishlistReducer, WISHLIST_STATE_KEY } from '@nike/wishlist-redux';\nimport { addPartnerCartReducer } from '@nike/partnercart-redux';\nimport { CART_STATE_KEY } from '@nike/cart-constants';\n\nimport { NIKE_SHOP_ROOT_ID } from '@nike/shop-public-constants';\n// import crcCodes from '@nike/ux-tread-crc-code/lib/buy/carts/v2/crcCodes'; // TODO MYBAG-2369 uncomment if we are supposed to do this on every page (we might have to for stale promos/pdp/or navigate away without clearing?)\n\nimport { addPageAction } from '@nike/ux-tread-new-relic';\nimport { SHOP_STATE_KEY, USER_INITIALIZED } from './constants';\nimport shopReducer from './reducer';\n\nimport createPersistentStore from './create-persistent-store.js';\nimport NikeShop from './nike-shop.js';\nimport initUserAndObserveStore from './init-user-and-observe-store';\nimport onCartUpdateSideEffects from './on-cart-update-side-effects';\nimport setupLocaleData from './setup-locale-data';\nimport getIsPageCart from './get-is-page-cart';\n\nconst LazyShopApp = React.lazy(() => /* webpackChunkName: ShopApp */ import('./shop-app'));\n\n/**\n * @name window.initNikeShop\n * @memberof shop-components\n * @param {object} params - named parameters\n * @param {object} params.store - optional redux store for backwards compatibility only during cutover period\n * @param {string} params.country - iso 2 letter country code, eg. cn\n * @param {string} params.language - bcp-47 language-COUNTRYCODE, eg. es-US\n * @param {Array.<string>} [params.errorsToExclude=['D3D734B6']] - an array of unique error crc codes to exclude, ex. codes via ux-tread-crc-code/lib/buy/carts/v2/crcCodes\n * @param {Array.<string>} [params.warningsToIncludeInDialog=[]] - an array of unique warning crc codes to include as errors\n * @param {boolean} [params.useListeners = true] - **EXPERIMENTAL** flag to turn of custom event dispatches, temporarily exposed and might be internalized later\n * @param {Function} params.onCartUpdate - callback function that has updated cart as parameter to allow consumers to hook into cart updates\n * @returns {NikeShop} - singleton of NikeShop which is also exposed globally already as window.NikeShop\n *\n * @example\n * <caption>\n * #### Basic instantiation of nike-shop-client within first client file of an app.\n * - Locale values can be derived via usage of ux-tread-localization, language-tunnel-json, fetched using url params from `https://www.nike.com/assets/experience/pet/locale-data/{countryInUrl}__{languageInUrl}.json`, or preferably via web-shell's locale module @see {@link https://github.nike.com/web/web-shell/blob/main/packages/web-shell-client/user-guide/locale.md}\n *    - country should be 2 letter countryCode (getCountry from ux-tread-localization)\n *      - Examples: us, US, cn, fr. See country and hreflang values within https://www.nike.com/assets/experience/pet/locale-data/us.json)\n *    - language should be bcp-47 valid language (getHrefLang from ux-tread-localization)\n *      - Examples: en-US, es-US, zh-Hans. See country and hreflang values within https://www.nike.com/assets/experience/pet/locale-data/us__es.json)\n * - Note that store is ONLY required if you are going to ship to prod while still using ux-tread-cart-redux for fetchCart and addToCart, wishlist-redux for addToWishlist, or are using the checkout-button we ship\n * </caption>\n * // client.prod.js\n * window.initNikeShop({\n *   country: 'us',\n *   language: 'en-US',\n *   store: yourReduxStoreThatHasOurReduxReducersInstalled, // temporary during cutover period\n * });\n *\n * @example\n * <caption>\n * #### Setting up html response and script tag\n * Our entry point installation is a script tag and an empty div added to the html response vs installation of node modules.\n * The div will be used for the NikeShop MFE to render and/or portal through.\n * In the future this might change to an edge-side includes tag but for now we'll simplify to this portion which you will not have to touch much in the long run.\n * - Place div using id from shop-public-constants module below the react app root div\n *   - the shop-public-constants package is purposefully decoupled to avoid requiring version updates and will never break as they will be only constants for public usage\n * - Directly following the react, react-dom and any polyfill scripts, add a script tag with the src value set to https://www.nike.com/assets/experience/shop-components/public/nike-shop-client.js\n *   - Note that there is no version in the script src as we webpack to a tiny entry point file that should never change. It has a shorter cache time and the remainder of the code required will be dynamically loaded, with chunks only changing hashes based on which files were touched for changes.\n *     This lets us deploy changes independently without requiring consumers to bump versions in their code base.\n *\n * </caption>\n * // example of renderer.js portion as we understand our eco-system today\n * import { NIKE_SHOP_ROOT_ID } from \"@nike/shop-public-constants\";\n *\n * // in a function where you might be returning a string that creates the html response today\n * function htmlStringRenderer(params) {\n * // ...\n *  return `\n *     <div id=\"react-root\">\n *       ${appString}\n *     </div>\n *     <div id=\"${NIKE_SHOP_ROOT_ID}\"></div>\n *\n *     <script src=\"${VENDOR_SCRIPTS.reactScript}\"></script>\n *     <script src=\"${VENDOR_SCRIPTS.reactDomScript}\"></script>\n *     <script src=\"${VENDOR_SCRIPTS.intersectionObserverPolyfill}\"></script>\n *     <script src=\"https://www.nike.com/assets/experience/shop-components/public/nike-shop-client.js\"></script>\n *   `;\n *    // ...\n * }\n *\n */\nexport default function bootstrapNikeShop({\n  store,\n  errorsToExclude = ['D3D734B6', 'D12EE4E6', '1E17F469', '9E64809B', 'F05351CA', 'AA33FB74'],\n  warningsToIncludeInDialog = [],\n  country,\n  language,\n  useListeners = true,\n  onCartUpdate,\n  featureFlags = {},\n  ...rest\n}) {\n  if (!country || country?.toLowerCase() === 'xl') {\n    addPageAction('nike-shop-invalid-country', { country, language });\n    return {}; // since we return shopInstance, we should return an empty obj vs undefined or null to be consistent\n  }\n  // NOTE - instead of pulling in the entire library, including this crcCode by default for empty errors. Should be manageable for us and make implementation easier for userland.\n  const isCartPage = getIsPageCart();\n  // NOTE I removed declaration of extra const because we only have 1 string at this moment and we should avoid extra code if possible.\n  // If this grows a lot... OR we lazy load this we should move to constants.\n  const finalErrorsToExclude = isCartPage\n    ? [...errorsToExclude, '7E977FCE'] // Item does not have available inventory\n    : [...errorsToExclude, '36A1E761']; // product not buyable in cart // invalid postal code in pdp foff request\n\n  const startTime = Date.now();\n  // We will start by setting up locale data asap\n  setupLocaleData({ country, language, startTime });\n  // NOTE - This function should fire ONLY once per app load.\n  // 1. we will first determine what store to observe from outside\n  let finalStore = null;\n\n  if (store) {\n    finalStore = store;\n  }\n\n  // 2. we create a shopInstance with the store - NOTE here's the THIS for this instance\n  const shopInstance = new NikeShop({\n    store: finalStore,\n    language,\n    country,\n    featureFlags,\n  });\n\n  // 3. we will setup our internal reducers\n  const reducers = {\n    [SHOP_STATE_KEY]: shopReducer,\n  };\n  // 4. if no final store was present we will create and setup our internal store\n  if (!finalStore) {\n    // in this case we might not have a cart reducer or wishlist reducer outside so we'll need to add them in\n    const { store: ownStore } = createPersistentStore({\n      reducers: {\n        ...reducers,\n        ...addPartnerCartReducer(),\n        ...addCartReducer(),\n        ...addWishlistReducer(),\n      },\n    });\n    finalStore = ownStore;\n    // 5. temporarily while we have to respect other stores we will have an internal store as well which we update here\n    shopInstance.updateStore({\n      internalStore: ownStore,\n    });\n  } else {\n    const { store: internalStore } = createPersistentStore({ reducers });\n    // 6. temporarily we will update internal store here without adding the reducers because finalStore will have the reducer\n    shopInstance.updateStore({\n      internalStore,\n    });\n  }\n  // 7. this assignment accounts for not overwriting the store in the !finalStore if block (see #5)\n  shopInstance.updateStore({\n    store: finalStore,\n  });\n\n  // 8. we have to assign some callbacks to reuse but they need scope on variables available inside this closure\n  const onCartUpdateCallbackWithSideEffects = () =>\n    onCartUpdateSideEffects(\n      {\n        cart: shopInstance.store.getState()[CART_STATE_KEY],\n        list: shopInstance.store.getState()[WISHLIST_STATE_KEY],\n      },\n      onCartUpdate,\n    );\n  // 9. we also need a fetch call for when NOT merging - currently doing it as a callback due to async with 2nd store + observer\n  const fetchCartCallbackWithUserData = () =>\n    shopInstance\n      .fetchCart({\n        ...rest,\n        force: true,\n        country: country?.toUpperCase(),\n      }) // there are schema errors from passing in lowercase country to foff + cartReviews\n      .then(() => shopInstance.internalStore.dispatch({ type: USER_INITIALIZED }))\n      .then(onCartUpdateCallbackWithSideEffects);\n\n  // 10. We will then initialize the user and setup the observer for the store that will drive the cart concerns\n  initUserAndObserveStore({\n    shopInstance,\n    onCartUpdateCallback: onCartUpdateCallbackWithSideEffects,\n    fetchCartCallback: fetchCartCallbackWithUserData,\n    useListeners,\n    errorsToExclude: finalErrorsToExclude,\n    warningsToInclude: warningsToIncludeInDialog,\n    startTime,\n  });\n\n  // 11. we render our ui into the dom element on the page - maybe this can be internalized later but it's safer for now to have a soft implementation requirement\n  ReactDOM.render(\n    <Suspense fallback={null}>\n      <LazyShopApp\n        shopInstance={shopInstance}\n        errorsToExclude={finalErrorsToExclude}\n        warningsToInclude={warningsToIncludeInDialog}\n        language={language}\n        country={country}\n      />\n    </Suspense>,\n    document.getElementById(NIKE_SHOP_ROOT_ID),\n  );\n\n  return shopInstance;\n}\n\n// NOTE example of listener\n// window.addEventListener(CART_COUNT_UPDATED_EVENT_NAME, evt =>\n//   console.log('CARTCOUNTEVENT received', evt),\n// );\n","/**\n * Determines the postal code based on user location and profile address.\n * Defaults to the user entered postal code which is the userLocationPostalCode\n * but if it doesn't exist, will fallback to the postal code from Identity service which is the profileAddressPostalCode.\n * @param {string} userLocationPostalCode - The postal code from the user's location.\n * @param {string} profileAddressPostalCode - The postal code from the user's profile address.\n * @returns {string} The determined postal code.\n */\nconst determinePostalCode = ({ userLocationPostalCode, profileAddressPostalCode }) => {\n  return userLocationPostalCode || profileAddressPostalCode || '';\n};\n\nexport default determinePostalCode;\n","export const SHOP_STATE_KEY = '@shop';\nexport const CLOSE_SHOP_DIALOG = `${SHOP_STATE_KEY}/CLOSE_DIALOG`;\nexport const OPEN_SHOP_DIALOG = `${SHOP_STATE_KEY}/OPEN_DIALOG`;\nexport const USER_INITIALIZED = `${SHOP_STATE_KEY}/USER_INITIALIZED`;\nexport const UPDATE_SHOP_USER = `${SHOP_STATE_KEY}/UPDATE_USER`;\nexport const UPDATE_USER_LOCATION_DATA = `${SHOP_STATE_KEY}/UPDATE_USER_LOCATION_DATA`;\nexport const UPDATE_SHARED_DATA = `${SHOP_STATE_KEY}/UPDATE_SHARED_DATA`;\nexport const CARTS_MERGED = `${SHOP_STATE_KEY}/CARTS_MERGED`;\n\nexport const CART_DIALOG_ROOT_ID = 'cart-dialog-root';\n\nexport const ON_FETCH_START = `${SHOP_STATE_KEY}/ON_FETCH_START`;\nexport const ON_FETCH_FAILURE = `${SHOP_STATE_KEY}/ON_FETCH_FAILURE`;\n\nexport const ON_FULFILLMENT_OFFERINGS_SUCCESS = `${SHOP_STATE_KEY}/ON_FULFILLMENT_OFFERINGS_SUCCESS`;\nexport const ON_SHIPPING_OPTIONS_SUCCESS = `${SHOP_STATE_KEY}/ON_SHIPPING_OPTIONS_SUCCESS`;\nexport const UPDATE_ENTITIES = `${SHOP_STATE_KEY}/UPDATE_ENTITIES`;\nexport const CLEAR_NORMALIZED_DATA = `${SHOP_STATE_KEY}/CLEAR_NORMALIZED_DATA`;\nexport const CLEAR_ERRORS = `${SHOP_STATE_KEY}/CLEAR_ERRORS`;\n\nexport const LOCATION_TYPES = {\n  digital: 'DIGITAL',\n  pickupLocations: 'PICK_UP_LOCATIONS',\n  pickupPoints: 'PICKUP_POINTS',\n  search: 'SEARCH',\n  shipping: 'SHIPPING',\n  store: 'STORE_VIEWS',\n  pickup: 'PICKUP',\n  ship: 'SHIP',\n};\n\nexport const DEFAULT_GRAND_TIMEOUT = 30000;\n\nexport const BUY_PARTNER_CART_REVIEWS = 'buy/partner_cart_reviews/v1';\n\nexport const DOTCOM_CHANNEL_ID = 'd9a5bc42-4b9c-4976-858a-f159cf99c647';\nexport const SNRKS_WEB_CHANNEL_ID = '010794e5-35fe-4e32-aaff-cd2c74f89d61';\n\nexport const GRAPHQL_ERROR_CODE = 'GRAPHQL_ERROR';\n\nexport const FULFILLMENT_OFFERINGS_SEARCH_RADIUS = 50;\n\nexport const GUEST = 'Guest';\n\nexport const HOST_NAME = process.env.NEXT_PUBLIC_HOST_NAME;\nexport const API_HOST_NAME = process.env.NEXT_PUBLIC_API_HOST_NAME;\n","/**\n * @ignore\n * @typedef {object} CustomEventOptions\n * @property {object} CustomEventOptions.detail - data passed when initializing the event\n * @property {boolean} CustomEventOptions.bubbles - A boolean indicating whether or not the event bubbles up through the DOM\n */\n\n/**\n * @ignore\n * @private\n * @param {string} eventName - event name string to create a CustomEvent with\n * @param {CustomEventOptions} customEventOptions - options for creating\n * @returns {CustomEvent} a new CustomEvent\n */\nexport default function createCustomEvent(eventName, customEventOptions) {\n  // NOTE - CustomEvent not supported in IE\n  return new CustomEvent(eventName, customEventOptions);\n}\n","/**\n * @ignore\n * @typedef {object} CustomEvent\n * @property {object} CustomEvent.detail - data passed when initializing the event\n * @property {boolean} CustomEvent.bubbles - A boolean indicating whether or not the event bubbles up through the DOM\n */\n\n/**\n * @ignore\n * @private\n * a wrapper for dispatching custom events for now\n *\n * @param {CustomEvent} customEvent - a native CustomEvent @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEventhttps://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\nexport default function dispatchCustomEvent(customEvent) {\n  // NOTE - CustomEvent not supported in IE\n  // uis that are suppoting IE will bring in the polyfill so we don't need to account for it\n  // We are not shipping this via dotcom utils because we are not yet sure where to fire the event from\n  // i.e. window or target? - so we'll keep it closer to the code now to avoid churn\n  window.dispatchEvent(customEvent);\n}\n","// local storage key for Store Selector MFE's selected store\nexport const SELECTED_STORE = 'PRIVATE_SSC_SELECTED_STORE';\n\n// local storage key for Location Search MFE's search details\nexport const SEARCH_DETAILS = 'PRIVATE_SSC_SEARCH_DETAILS';\n","import { SELECTED_STORE } from '../constants';\n\n/**\n * @function getSelectedStoreLocationId\n * Returns the selected store location id from local storage\n *\n * @returns {string} locationId - The location id retrieved from Store Selector MFE's local storage\n */\n\nconst getSelectedStoreLocationId = () => {\n  try {\n    const selectedLocationId = window.localStorage.getItem(SELECTED_STORE);\n    const { id: locationId = '' } = JSON.parse(selectedLocationId);\n    return locationId;\n  } catch (e) {\n    return '';\n  }\n};\n\nexport default getSelectedStoreLocationId;\n","import {\n  getPageRouteFromPathname,\n  stripDarkFromRoute,\n  getDocumentLocation,\n} from '@nike/ux-tread-dotcom-utils';\n\nexport default () => {\n  const { pathname } = getDocumentLocation();\n  return stripDarkFromRoute(getPageRouteFromPathname(pathname));\n};\n","import getPage from './get-page';\n\n/**\n * @private\n * a check for if the page is cart page\n *\n * @returns {boolean} is page cart\n */\nexport default function getIsPageCart() {\n  return getPage() === 'cart';\n}\n","import { SHOP_STATE_KEY } from './constants';\n\n/**\n * @private\n * getting the pickup offering status to pass to analytics\n *\n * @returns {string} no stores, stores but no offerings, offerings, no location detected\n */\nexport default function getPickupOfferingStatus(itemId) {\n  const hasPostalCode = window.NikeShop?.get()?.postalCode;\n  if (!hasPostalCode) {\n    return 'no location detected';\n  }\n  const normalizedLocations =\n    window.NikeShop.internalStore.getState()?.[SHOP_STATE_KEY]?.normalized?.locations ?? {};\n\n  const hasStoresInRadius =\n    Object.keys(normalizedLocations)\n      ?.map(id => ({\n        ...normalizedLocations[id],\n      }))\n      ?.filter(location => location.type === 'SEARCH')[0]?.results.length > 0;\n\n  const storesWithAvailability = window.NikeShop.internalStore\n    .getState()\n    ?.[SHOP_STATE_KEY]?.normalized?.offeringItems?.[itemId]?.fulfillmentOfferings.filter(\n      fulfillmentAvailable =>\n        fulfillmentAvailable?.type === 'PICKUP' &&\n        fulfillmentAvailable?.location?.type === 'STORE_VIEWS',\n    ).length;\n  const hasItemsAvailability = storesWithAvailability > 0;\n\n  if (hasStoresInRadius && hasItemsAvailability) {\n    return 'offerings';\n  } else if (hasStoresInRadius) {\n    return 'stores but no offerings';\n  }\n  return 'no stores';\n}\n","/**\n * @private\n * a wrapper function to let us get the right locale object from shell.client in the future, today using nikeShopShellProxy\n *\n * @returns {object} shell.locale object with locale information\n */\nexport default function getShellLocale() {\n  return (\n    (typeof window !== 'undefined' &&\n      window.webShellClient &&\n      window.webShellClient?.locale?.get()) ||\n    (typeof window !== 'undefined' && window.nikeShopShellProxy?.locale) ||\n    {}\n  );\n}\n","const identity = x => x;\n\nexport default identity;\n","import { createSelector } from 'reselect';\nimport { getPartnerCartErrors } from '@nike/partnercart-redux';\nimport { getWishlistErrors } from '@nike/wishlist-redux';\nimport { getCartErrors } from '@nike/ux-tread-cart-redux';\nimport getIsCountryIncludedInGlobalStore from '../state-replacement/selectors/get-is-country-included-in-global-store';\n\nconst getAllCartErrors = createSelector(\n  getIsCountryIncludedInGlobalStore,\n  getCartErrors,\n  getPartnerCartErrors,\n  getWishlistErrors,\n  (isGlobalStoreCountry, cartErrors, partnerCartErrors, listErrors) =>\n    !isGlobalStoreCountry\n      ? [...cartErrors, ...listErrors]\n      : [...cartErrors, ...partnerCartErrors, ...listErrors],\n);\n\nexport default getAllCartErrors;\n","// NOTE - this needs to be moved into ux-tread-cart-redux (partnercart-redux should be folded into cart-redux, but keep tread-partnercart separate)\nimport { createSelector } from 'reselect';\nimport getAllCartErrors from './get-all-cart-errors';\n\nconst getFilteredCartErrors = createSelector(\n  getAllCartErrors,\n  (state, props) => props.errorsToExclude || [],\n  (errors, errorsToExclude) =>\n    errors.filter(({ crcCode }) => crcCode && errorsToExclude.indexOf(crcCode) < 0),\n);\n\nexport default getFilteredCartErrors;\n","import { createSelector } from 'reselect';\n\nimport { selectCarts } from '@nike/ux-tread-cart-redux';\n\nconst getCartWarnings = createSelector(selectCarts, carts => carts?.warnings || []);\n\nexport default getCartWarnings;\n","// NOTE - this needs to be moved into ux-tread-cart-redux (partnercart-redux should be folded into cart-redux, but keep tread-partnercart separate)\nimport { createSelector } from 'reselect';\nimport getCartWarnings from './get-cart-warnings';\n\nconst getFilteredCartWarnings = createSelector(\n  getCartWarnings,\n  (state, props) => props.warningsToInclude || [],\n  (warnings, warningsToInclude) =>\n    warnings.filter(({ crcCode }) => crcCode && warningsToInclude.indexOf(crcCode) > -1),\n);\n\nexport default getFilteredCartWarnings;\n","/**\n * Returns a reference to webShellClient locale data get method from the web-shell-client's global web API.\n * Encapsulating this functionality allows much easier testing and necessary mocking as well as reuse if needed.\n *\n * @private\n * @returns {Object} webShellClientLocale Locale data\n * @returns {string} webShellClientLocale.country\n * @returns {string} webShellClientLocale.hreflang\n * @returns {string} webShellClientLocale.intl\n * @returns {string} webShellClientLocale.langRegion\n * @returns {string} webShellClientLocale.language\n * @returns {string} webShellClientLocale.urlParam\n * @returns {string} webShellClientLocale.cloudUrlFragment\n * @returns {string} webShellClientLocale.currency\n * @returns {string} webShellClientLocale.currencySymbol\n * @returns {string} webShellClientLocale.merchGroup\n * @returns {string} webShellClientLocale.translationsLanguage\n * @returns {Object} webShellClientLocale.countryNames\n */\n\nconst getWebShellClientLocale = () => window?.webShellClient?.locale?.get() || {};\nexport default getWebShellClientLocale;\n","import { createSelector } from 'reselect';\nimport { getMerchGroup } from './locale';\n\n/**\n * getIsCountryIncludedInGlobalStore\n *\n * @description we can use the merch group available in the config to check if it's part of XA or XP\n * @param {object} state - The cart state object available via the reducer\n * @returns {boolean} whether the config country belongs to global store denomination\n */\nconst getIsCountryIncludedInGlobalStore = createSelector(getMerchGroup, merchGroup => {\n  return merchGroup.toUpperCase().indexOf('X') > -1;\n});\n\nexport default getIsCountryIncludedInGlobalStore;\n","import getWebShellClientLocale from '../get-webshellclient-locale';\n\n// ux-tread-localization\nexport const getMerchGroup = () => getWebShellClientLocale().merchGroup;\nexport const getCountry = () => getWebShellClientLocale().country;\nexport const getCapitalizedCountry = () => getWebShellClientLocale()?.country?.toUpperCase();\nexport const getUrlParam = () => getWebShellClientLocale().urlParam;\nexport const getCloudUrlFragment = () => getWebShellClientLocale().cloudUrlFragment;\nexport const getLangRegion = () => getWebShellClientLocale().langRegion || '';\nexport const getPosixLangRegion = () => getLangRegion().replace('-', '_');\nexport const getHrefLang = () => getWebShellClientLocale().hreflang;\nexport const getLanguage = () => getWebShellClientLocale().language;\nexport const getLangLocale = () => `${getCountry()}/${getLangRegion()}`;\n","import { addPageAction } from '@nike/ux-tread-new-relic';\nimport { eventNameLookup } from './analytics/constants';\n\n/**\n * @private\n * @typedef TrackEventDefaultOptions\n * @property {boolean} usePageAction - denotes whether trackEvent call should also include addPageAction call for an event\n * @property {object|null} telemetryData - optional argument used to trim down select properties to capture for operational telemetry\n */\nconst defaultOptions = {\n  // NOTE since we favor sending telemetry data for most events this helps us both make progress on ui code\n  usePageAction: true,\n  // usePageEvent? TBD if they determine we have to fire pageEvents we need to abstract that here maybe while using window?.webShellClient?.analytics?.track including changing shape for some things\n  // Sometimes we might want to not include whole objects for event data and might want stripped down information (eg activating experiments json).\n  // This below option would allow us to define in telemetry data as needed.\n  telemetryData: null,\n};\n\n/**\n * trackEvent is an abstraction that limits the variation of how we would track events across nike-shop.\n * It also ensures default telemetry data to be included with ease\n * and provides a way to only do select telemetry data for the purposes of ops vs unhelpful arbitrary json structures\n *\n * @private\n * @param {string} eventName - event name to send to both\n * @param {object} eventData - event data which is mapped to properties today\n * @param {*} [options={ usePageAction: true, telemetryData: null, $schema: null }] - named params for options available to this function\n */\nconst trackEvent = (\n  eventName,\n  eventData,\n  { usePageAction, telemetryData, $schema } = defaultOptions,\n) => {\n  const track = window?.webShellClient?.analytics?.track;\n\n  // NOTE jest.fn() yields typeof function but NOT instanceof Function\n  if (typeof track === 'function' && eventData) {\n    // the check for eventData would:\n    // a) ensure we never send empty properties\n    // b) allow us to bypass calling track if we only need to capture telemetry data but requires passing `null` as 2nd param\n    track(eventName, eventData, {\n      $schema: $schema || eventNameLookup[eventName],\n      writeKey: process.env.SEGMENT_WRITE_KEY,\n    });\n  }\n\n  if (usePageAction) {\n    let finalEventData = eventData || {}; // in case we passed null on purpose or is falsy accidentally since we spread this below\n    if (telemetryData) {\n      finalEventData = telemetryData;\n    }\n    addPageAction(eventName, {\n      ...finalEventData,\n      // NOTE removed url because newrelic already is capturing `pageUrl` for us without us doing anything\n      version: window.NikeShop.version,\n    });\n  }\n};\n\nexport default trackEvent;\n\n// NOTE  if/when we need to implement shell.analytics we can just alter this file at that point to prevent chasing down everything.. for nikeShop\n"],"names":["SEGMENT_EVENTS_SCHEMA_PREFIX","concat","HOST_NAME","LOCATION_UPDATED_EVENT_SCHEMA","ERROR_MODAL_VIEWED_SCHEMA","PICKUP_OFFERINGS_VIEWED_EVENT_SCHEMA","LOCATION_UPDATED","PICKUP_OFFERINGS_VIEWED","eventNameLookup","_defineProperty","availableVasSchema","schema","Entity","idAttribute","value","type","vasType","processStrategy","_objectSpread","valueAddedService","promotionCodeSchema","val","code","id","productContentSchema","parent","key","merchProduct","productImageSchema","product","content","valueAddedServices","imageSet","availableVas","_value$valueAddedServ","vas","isNikeId","styleType","isGiftCard","hasWarranty","Boolean","find","item","warning","_value$item","sku","productId","_value$product","_value$product2","listItem","skuId","list","listItems","objects","define","skus","fulfillmentOfferingItem","fulfillmentOfferings","resultSchema","_ref","details","description","_objectWithoutProperties","_excluded","locationsSchema","results","itemCostSchema","promotionDiscounts","cartItem","itemCosts","_value$sku","fulfillmentGroupSchema","items","_val$fulfillmentDetai","fulfillmentDetails","cartTotals","country","window","NikeShop","_val$items$details","_val$items$details2","_val$taxes","_val$fulfillment","_val$valueAddedServic","fulfillmentGroups","summaryTotal","total","summarySubtotal","price","summaryDiscountTotal","discount","summaryEstimatedTax","taxes","summaryEstimatedShipping","fulfillment","summaryVasTotal","subtotal","discountTotal","taxTotal","shippingTotal","valueAddedServicesTotal","fulfillmentOfferingsSchema","cartReviews","response","totals","locations","skuOfferings","warnings","promotionCodes","fulfillmentTypesSchema","availableFulfillmentTypesSchema","fulfillmentTypes","pickupOffering","location","shipOffering","mergeStrategy","entityA","entityB","_toConsumableArray","fulfillmentOfferingSchema","Union","PICKUP","SHIP","persistedFulfillmentOfferingItem","persistedFulfillmentOfferingsSchema","persistedAvailableFulfillmentTypesSchema","shippingGroupSchema","_val$shippingMethod","shippingMethod","shippingOptionsSchema","shippingGroups","dataSchema","cart","promotionCodesDetails","cartItems","persistedFulfillmentOfferings","shippingOptions","products","availableFulfillmentTypes","persistedAvailableFulfillmentTypes","mergeWithArrayMerge","obj1","obj2","Array","isArray","state","nextState","keysToExclude","keysToMergeArrays","prev","curr","mergeFunction","includes","undefined","merged","mergeWith","searchDetails","localStorage","getItem","SEARCH_DETAILS","_JSON$parse$postCode","JSON","parse","postCode","e","postalCode","getSearchDetailsPostalCode","locationId","getSelectedStoreLocationId","normalizeAndMergeState","_ref$dataToNormalize","dataToNormalize","_ref$keysToExcludeFro","keysToExcludeFromMerge","_ref$keysToMergeArray","_ref2","normalize","result","_ref3","entities","rest","errors","data","entitiesToMerge","Object","keys","reduce","deepStateMerge","getAppliedPromoIdsFromCartReviewsItems","cartReviewsItems","_cartReviewsItems$map","appliedPromoIds","map","_item$itemCosts$promo","_item$itemCosts","_item$promotionDiscou","filter","promoId","Set","combineReducers","_action$payload$fulfi","arguments","length","action","ON_FULFILLMENT_OFFERINGS_SUCCESS","payload","ON_FETCH_FAILURE","_action$payload","_action$payload2","_action$payload3","_action$payload4","message","crcCode","itemId","CLEAR_ERRORS","errorWarning","foffJobsCrcCodes","ON_FETCH_START","persistToLocalStorage","UPDATE_USER_LOCATION_DATA","stateReconciler","inboundState","_getRetailMFELocation","getRetailMFELocationState","normalized","persistToSessionStorage","_action$payload5","partialError","ON_SHIPPING_OPTIONS_SUCCESS","UPDATE_ENTITIES","CLEAR_NORMALIZED_DATA","blacklist","ui","isDialogOpen","OPEN_SHOP_DIALOG","CLOSE_SHOP_DIALOG","app","wishlistInitialized","cartFetched","INITIALIZE_WISHLIST_SUCCESS","FETCH_CARTS_FAILURE","FETCH_CARTS_SUCCESS","CARTS_MERGED","cartsMerged","shared","UPDATE_SHARED_DATA","promos","_payload$fulfillmentO","_payload$availableFul","cartReviewsItem","storedOfferingTypes","_action$payload6","_ref$reducers","reducers","_ref$initialState","initialState","_ref$middlewares","middlewares","_ref$enhancers","enhancers","_ref$options","options","finalReducers","enhancer","composeWithDevTools","name","trace","traceLimit","apply","applyMiddleware","thunk","store","createStore","persistor","persistStore","getState","shouldPurgeWebStorage","purge","onErrorCallback","actionName","version","addPageAction","address","_queryClient","WeakMap","_createClass","props","_props$country","_this","_classCallCheck","_classPrivateFieldInitSpec","writable","getVersion","_ref$quantity","quantity","args","then","mod","addToCart","default","dispatch","addPromotionCode","removePromotionCodes","addToWishlist","addToCartFromWishlist","addToWishlistFromCart","removeItemsFromWishlist","updateCartItem","updateListItem","fetchMoreListItems","fetchCart","mergeCarts","initializeWishlist","removeItemFromCart","params","fetchFulfillmentOfferings","internalStore","resp","_this$get","_this$get2","dispatchCustomEvent","createCustomEvent","get","events","sharedDataUpdated","bubbles","detail","offeringItems","fetchFulfillmentOfferingsCartReviews","fetchShippingOptionsCartReviews","navigateToCheckout","_this$internalStore$g","showPickupIneligibleMessage","_ref2$fulfillmentType","fulfillmentType","isOpen","trackEvent","pickupOfferingStatus","getPickupOfferingStatus","usePageAction","fetchProductDetails","_this$internalStore$g2","diffFavoritesFromProducts","SHOP_STATE_KEY","_this$internalStore$g3","_this$internalStore","_classPrivateFieldGet2","_this$internalStore$g4","_classPrivateFieldGet3","_this$internalStore$g5","_this$internalStore$g6","_this$internalStore$g7","_this$internalStore$g8","_this$store$getState","_this$internalStore$g9","_this$internalStore$g10","_this$internalStore$g11","_this$internalStore$g12","_this$internalStore$g13","_this$internalStore$g14","_this$internalStore$g15","_this$internalStore$g16","_this$internalStore$g17","_this$internalStore$g18","_this$internalStore$g19","_this$internalStore$g20","_this$internalStore$g21","_this$internalStore$g22","_this$internalStore$g23","determinePostalCode","userLocationPostalCode","profileAddressPostalCode","_classPrivateFieldGet","getQueryData","locationSearchResults","preferredAddress","determineAddressVsCountry","preferredPickupLocation","promoCodes","CART_STATE_KEY","currency","locationUpdated","LOCATION_UPDATED_EVENT_NAME","UPDATED_SHOP_DATA_EVENT","mergedCarts","MERGED_CARTS_EVENT","cartCountUpdated","CART_COUNT_UPDATED_EVENT_NAME","listsInitialized","cartHref","favoritesHref","checkoutHref","totalCartQuantity","_classPrivateFieldSet","_ref4","_this$get$events","this","language","toUpperCase","featureFlags","createSelector","getFilteredCartErrors","getFilteredCartWarnings","observeStore","onChange","currentState","handleChange","unsubscribe","subscribe","_asyncToGenerator","_regeneratorRuntime","_callee","onCartUpdate","_ref$fetchCartCallbac","fetchCartCallback","shopInstance","_context","next","identity","webShellClient","getIsLoggedIn","sent","stop","_x","callback","_window","_list$listItems","_list$listItems2","updateAccessors","set","pathParameter","href","getDocumentLocation","charAt","_initUserAndObserveStore","onCartUpdateCallback","useListeners","errorsToExclude","warningsToInclude","startTime","_window2","_window3","_window4","_window5","_locale$langRegion","cartCount","visitorId","token","userProfile","isLoggedIn","userType","attempted","locale","langLocale","localeForCurrency","initialize","isClient","getVisitData","t0","getAccessToken","getUserProfile","loadTime","Date","now","status","getShellLocale","langRegion","toLowerCase","replace","hreflang","ON_INIT_CART","meta","nextCartCount","getCartQuantity","urlLocale","cloudUrlFragment","urlLocaleFragment","appendToHref","updatedSharedDataEvent","onCartUpdateSideEffects","WISHLIST_STATE_KEY","cartCountEvent","hasCartErrors","getHasCartErrorsOrWarnings","toggleBodyOverflow","initializeUser","t1","abrupt","onErrorShellIdentityCallback","ACTION_NAMES","trackLocale","webShellLocale","fallbackLocale","requestedCountry","requestedLanguage","webShellLocaleCountry","webShellLocaleLanguage","webShellLocaleUrlFragment","fallbackCountry","fallbackLanguage","fallbackUrlFragment","nikeShopShellProxy","lowerCasedCountry","Promise","resolve","shellProxy","defineProperty","getStaticData","resourcePath","resource","file","ready","catch","localeData","LazyShopApp","React","bootstrapNikeShop","_ref$errorsToExclude","_ref$warningsToInclud","warningsToIncludeInDialog","_ref$useListeners","_ref$featureFlags","isCartPage","getIsPageCart","finalErrorsToExclude","setupLocaleData","finalStore","shopReducer","createPersistentStore","updateStore","ownStore","addPartnerCartReducer","addCartReducer","addWishlistReducer","onCartUpdateCallbackWithSideEffects","initUserAndObserveStore","force","USER_INITIALIZED","ReactDOM","___EmotionJSX","Suspense","fallback","document","getElementById","NIKE_SHOP_ROOT_ID","CART_DIALOG_ROOT_ID","LOCATION_TYPES","digital","pickupLocations","pickupPoints","search","shipping","pickup","ship","DEFAULT_GRAND_TIMEOUT","BUY_PARTNER_CART_REVIEWS","DOTCOM_CHANNEL_ID","SNRKS_WEB_CHANNEL_ID","GRAPHQL_ERROR_CODE","FULFILLMENT_OFFERINGS_SEARCH_RADIUS","process","API_HOST_NAME","eventName","customEventOptions","CustomEvent","customEvent","dispatchEvent","SELECTED_STORE","selectedLocationId","_JSON$parse$id","pathname","stripDarkFromRoute","getPageRouteFromPathname","getPage","_window$NikeShop","_window$NikeShop$inte","_window$NikeShop$inte2","_Object$keys","_window$NikeShop$inte3","normalizedLocations","hasStoresInRadius","storesWithAvailability","fulfillmentAvailable","_fulfillmentAvailable","_window$webShellClien","_window$nikeShopShell","x","getIsCountryIncludedInGlobalStore","getCartErrors","getPartnerCartErrors","getWishlistErrors","isGlobalStoreCountry","cartErrors","partnerCartErrors","listErrors","getAllCartErrors","indexOf","selectCarts","carts","getCartWarnings","getMerchGroup","merchGroup","getWebShellClientLocale","getCountry","defaultOptions","telemetryData","eventData","$schema","track","analytics","writeKey","finalEventData"],"sourceRoot":""}