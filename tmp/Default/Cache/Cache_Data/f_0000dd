{"version":3,"file":"npm.redux-persist.chunk.44db10.js","mappings":"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","sources":["webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-38982adb6e/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/es/stateReconciler/autoMergeLevel1.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-38982adb6e/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/es/persistReducer.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-38982adb6e/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/es/stateReconciler/autoMergeLevel2.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-38982adb6e/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/es/constants.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-38982adb6e/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/es/persistStore.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-78af88057d/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/es/constants.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-78af88057d/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/es/stateReconciler/autoMergeLevel1.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-78af88057d/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/es/createPersistoid.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-78af88057d/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/es/getStoredState.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-78af88057d/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/es/purgeStoredState.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-78af88057d/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/es/persistReducer.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-78af88057d/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/es/stateReconciler/autoMergeLevel2.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-78af88057d/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/es/persistStore.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-78af88057d/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/lib/stateReconciler/autoMergeLevel2.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-78af88057d/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/lib/storage/createWebStorage.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-78af88057d/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/lib/storage/getStorage.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-78af88057d/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/lib/storage/index.js","webpack://@nike/shop-components/../../.yarn/__virtual__/redux-persist-virtual-78af88057d/0/cache/redux-persist-npm-5.10.0-ef042c2563-ddf9845009.zip/node_modules/redux-persist/lib/storage/session.js"],"sourcesContent":["var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexport default function autoMergeLevel1(inboundState, originalState, reducedState, _ref) {\n  var debug = _ref.debug;\n\n  var newState = _extends({}, reducedState);\n  // only rehydrate if inboundState exists and is an object\n  if (inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') {\n    Object.keys(inboundState).forEach(function (key) {\n      // ignore _persist data\n      if (key === '_persist') return;\n      // if reducer modifies substate, skip auto rehydration\n      if (originalState[key] !== reducedState[key]) {\n        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist/stateReconciler: sub state for key `%s` modified, skipping.', key);\n        return;\n      }\n      // otherwise hard set the new value\n      newState[key] = inboundState[key];\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production' && debug && inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') console.log('redux-persist/stateReconciler: rehydrated keys \\'' + Object.keys(inboundState).join(', ') + '\\'');\n\n  return newState;\n}\n\n/*\n  autoMergeLevel1: \n    - merges 1 level of substate\n    - skips substate if already modified\n*/","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport { FLUSH, PAUSE, PERSIST, PURGE, REHYDRATE, DEFAULT_VERSION } from './constants';\n\nimport autoMergeLevel1 from './stateReconciler/autoMergeLevel1';\nimport createPersistoid from './createPersistoid';\nimport defaultGetStoredState from './getStoredState';\nimport purgeStoredState from './purgeStoredState';\n\nvar DEFAULT_TIMEOUT = 5000;\n/*\n  @TODO add validation / handling for:\n  - persisting a reducer which has nested _persist\n  - handling actions that fire before reydrate is called\n*/\nexport default function persistReducer(config, baseReducer) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!config) throw new Error('config is required for persistReducer');\n    if (!config.key) throw new Error('key is required in persistor config');\n    if (!config.storage) throw new Error(\"redux-persist: config.storage is required. Try using one of the provided storage engines `import storage from 'redux-persist/lib/storage'`\");\n  }\n\n  var version = config.version !== undefined ? config.version : DEFAULT_VERSION;\n  var debug = config.debug || false;\n  var stateReconciler = config.stateReconciler === undefined ? autoMergeLevel1 : config.stateReconciler;\n  var getStoredState = config.getStoredState || defaultGetStoredState;\n  var timeout = config.timeout !== undefined ? config.timeout : DEFAULT_TIMEOUT;\n  var _persistoid = null;\n  var _purge = false;\n  var _paused = true;\n  var conditionalUpdate = function conditionalUpdate(state) {\n    // update the persistoid only if we are rehydrated and not paused\n    state._persist.rehydrated && _persistoid && !_paused && _persistoid.update(state);\n    return state;\n  };\n\n  return function (state, action) {\n    var _ref = state || {},\n        _persist = _ref._persist,\n        rest = _objectWithoutProperties(_ref, ['_persist']);\n\n    var restState = rest;\n\n    if (action.type === PERSIST) {\n      var _sealed = false;\n      var _rehydrate = function _rehydrate(payload, err) {\n        // dev warning if we are already sealed\n        if (process.env.NODE_ENV !== 'production' && _sealed) console.error('redux-persist: rehydrate for \"' + config.key + '\" called after timeout.', payload, err);\n\n        // only rehydrate if we are not already sealed\n        if (!_sealed) {\n          action.rehydrate(config.key, payload, err);\n          _sealed = true;\n        }\n      };\n      timeout && setTimeout(function () {\n        !_sealed && _rehydrate(undefined, new Error('redux-persist: persist timed out for persist key \"' + config.key + '\"'));\n      }, timeout);\n\n      // @NOTE PERSIST resumes if paused.\n      _paused = false;\n\n      // @NOTE only ever create persistoid once, ensure we call it at least once, even if _persist has already been set\n      if (!_persistoid) _persistoid = createPersistoid(config);\n\n      // @NOTE PERSIST can be called multiple times, noop after the first\n      if (_persist) return state;\n      if (typeof action.rehydrate !== 'function' || typeof action.register !== 'function') throw new Error('redux-persist: either rehydrate or register is not a function on the PERSIST action. This can happen if the action is being replayed. This is an unexplored use case, please open an issue and we will figure out a resolution.');\n\n      action.register(config.key);\n\n      getStoredState(config).then(function (restoredState) {\n        var migrate = config.migrate || function (s, v) {\n          return Promise.resolve(s);\n        };\n        migrate(restoredState, version).then(function (migratedState) {\n          _rehydrate(migratedState);\n        }, function (migrateErr) {\n          if (process.env.NODE_ENV !== 'production' && migrateErr) console.error('redux-persist: migration error', migrateErr);\n          _rehydrate(undefined, migrateErr);\n        });\n      }, function (err) {\n        _rehydrate(undefined, err);\n      });\n\n      return _extends({}, baseReducer(restState, action), {\n        _persist: { version: version, rehydrated: false }\n      });\n    } else if (action.type === PURGE) {\n      _purge = true;\n      action.result(purgeStoredState(config));\n      return _extends({}, baseReducer(restState, action), {\n        _persist: _persist\n      });\n    } else if (action.type === FLUSH) {\n      action.result(_persistoid && _persistoid.flush());\n      return _extends({}, baseReducer(restState, action), {\n        _persist: _persist\n      });\n    } else if (action.type === PAUSE) {\n      _paused = true;\n    } else if (action.type === REHYDRATE) {\n      // noop on restState if purging\n      if (_purge) return _extends({}, restState, {\n        _persist: _extends({}, _persist, { rehydrated: true })\n\n        // @NOTE if key does not match, will continue to default else below\n      });if (action.key === config.key) {\n        var reducedState = baseReducer(restState, action);\n        var inboundState = action.payload;\n        // only reconcile state if stateReconciler and inboundState are both defined\n        var reconciledRest = stateReconciler !== false && inboundState !== undefined ? stateReconciler(inboundState, state, reducedState, config) : reducedState;\n\n        var _newState = _extends({}, reconciledRest, {\n          _persist: _extends({}, _persist, { rehydrated: true })\n        });\n        return conditionalUpdate(_newState);\n      }\n    }\n\n    // if we have not already handled PERSIST, straight passthrough\n    if (!_persist) return baseReducer(state, action);\n\n    // run base reducer:\n    // is state modified ? return original : return updated\n    var newState = baseReducer(restState, action);\n    if (newState === restState) return state;else {\n      newState._persist = _persist;\n      return conditionalUpdate(newState);\n    }\n  };\n}","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexport default function autoMergeLevel2(inboundState, originalState, reducedState, _ref) {\n  var debug = _ref.debug;\n\n  var newState = _extends({}, reducedState);\n  // only rehydrate if inboundState exists and is an object\n  if (inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') {\n    Object.keys(inboundState).forEach(function (key) {\n      // ignore _persist data\n      if (key === '_persist') return;\n      // if reducer modifies substate, skip auto rehydration\n      if (originalState[key] !== reducedState[key]) {\n        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist/stateReconciler: sub state for key `%s` modified, skipping.', key);\n        return;\n      }\n      if (isPlainEnoughObject(reducedState[key])) {\n        // if object is plain enough shallow merge the new values (hence \"Level2\")\n        newState[key] = _extends({}, newState[key], inboundState[key]);\n        return;\n      }\n      // otherwise hard set\n      newState[key] = inboundState[key];\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production' && debug && inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') console.log('redux-persist/stateReconciler: rehydrated keys \\'' + Object.keys(inboundState).join(', ') + '\\'');\n\n  return newState;\n}\n\n/*\n  autoMergeLevel2: \n    - merges 2 level of substate\n    - skips substate if already modified\n    - this is essentially redux-perist v4 behavior\n*/\n\nfunction isPlainEnoughObject(o) {\n  return o !== null && !Array.isArray(o) && (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object';\n}","export var KEY_PREFIX = 'persist:';\nexport var FLUSH = 'persist/FLUSH';\nexport var REHYDRATE = 'persist/REHYDRATE';\nexport var PAUSE = 'persist/PAUSE';\nexport var PERSIST = 'persist/PERSIST';\nexport var PURGE = 'persist/PURGE';\nexport var REGISTER = 'persist/REGISTER';\nexport var DEFAULT_VERSION = -1;","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nimport { createStore } from 'redux';\n\nimport persistReducer from './persistReducer';\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE } from './constants';\n\nvar initialState = {\n  registry: [],\n  bootstrapped: false\n};\n\nvar persistorReducer = function persistorReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments[1];\n\n  switch (action.type) {\n    case REGISTER:\n      return _extends({}, state, { registry: [].concat(_toConsumableArray(state.registry), [action.key]) });\n    case REHYDRATE:\n      var firstIndex = state.registry.indexOf(action.key);\n      var registry = [].concat(_toConsumableArray(state.registry));\n      registry.splice(firstIndex, 1);\n      return _extends({}, state, { registry: registry, bootstrapped: registry.length === 0 });\n    default:\n      return state;\n  }\n};\n\nexport default function persistStore(store, options, cb) {\n  // help catch incorrect usage of passing PersistConfig in as PersistorOptions\n  if (process.env.NODE_ENV !== 'production') {\n    var optionsToTest = options || {};\n    var bannedKeys = ['blacklist', 'whitelist', 'transforms', 'storage', 'keyPrefix', 'migrate'];\n    bannedKeys.forEach(function (k) {\n      if (!!optionsToTest[k]) console.error('redux-persist: invalid option passed to persistStore: \"' + k + '\". You may be incorrectly passing persistConfig into persistStore, whereas it should be passed into persistReducer.');\n    });\n  }\n  var boostrappedCb = cb || false;\n\n  var _pStore = createStore(persistorReducer, initialState, options ? options.enhancer : undefined);\n  var register = function register(key) {\n    _pStore.dispatch({\n      type: REGISTER,\n      key: key\n    });\n  };\n\n  var rehydrate = function rehydrate(key, payload, err) {\n    var rehydrateAction = {\n      type: REHYDRATE,\n      payload: payload,\n      err: err,\n      key: key\n      // dispatch to `store` to rehydrate and `persistor` to track result\n    };store.dispatch(rehydrateAction);\n    _pStore.dispatch(rehydrateAction);\n    if (boostrappedCb && persistor.getState().bootstrapped) {\n      boostrappedCb();\n      boostrappedCb = false;\n    }\n  };\n\n  var persistor = _extends({}, _pStore, {\n    purge: function purge() {\n      var results = [];\n      store.dispatch({\n        type: PURGE,\n        result: function result(purgeResult) {\n          results.push(purgeResult);\n        }\n      });\n      return Promise.all(results);\n    },\n    flush: function flush() {\n      var results = [];\n      store.dispatch({\n        type: FLUSH,\n        result: function result(flushResult) {\n          results.push(flushResult);\n        }\n      });\n      return Promise.all(results);\n    },\n    pause: function pause() {\n      store.dispatch({\n        type: PAUSE\n      });\n    },\n    persist: function persist() {\n      store.dispatch({ type: PERSIST, register: register, rehydrate: rehydrate });\n    }\n  });\n\n  persistor.persist();\n\n  return persistor;\n}","export var KEY_PREFIX = 'persist:';\nexport var FLUSH = 'persist/FLUSH';\nexport var REHYDRATE = 'persist/REHYDRATE';\nexport var PAUSE = 'persist/PAUSE';\nexport var PERSIST = 'persist/PERSIST';\nexport var PURGE = 'persist/PURGE';\nexport var REGISTER = 'persist/REGISTER';\nexport var DEFAULT_VERSION = -1;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexport default function autoMergeLevel1(inboundState, originalState, reducedState, _ref) {\n  var debug = _ref.debug;\n\n  var newState = _extends({}, reducedState);\n  // only rehydrate if inboundState exists and is an object\n  if (inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') {\n    Object.keys(inboundState).forEach(function (key) {\n      // ignore _persist data\n      if (key === '_persist') return;\n      // if reducer modifies substate, skip auto rehydration\n      if (originalState[key] !== reducedState[key]) {\n        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist/stateReconciler: sub state for key `%s` modified, skipping.', key);\n        return;\n      }\n      // otherwise hard set the new value\n      newState[key] = inboundState[key];\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production' && debug && inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') console.log('redux-persist/stateReconciler: rehydrated keys \\'' + Object.keys(inboundState).join(', ') + '\\'');\n\n  return newState;\n}\n\n/*\n  autoMergeLevel1: \n    - merges 1 level of substate\n    - skips substate if already modified\n*/","import { KEY_PREFIX, REHYDRATE } from './constants';\n\n// @TODO remove once flow < 0.63 support is no longer required.\n\nexport default function createPersistoid(config) {\n  // defaults\n  var blacklist = config.blacklist || null;\n  var whitelist = config.whitelist || null;\n  var transforms = config.transforms || [];\n  var throttle = config.throttle || 0;\n  var storageKey = '' + (config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX) + config.key;\n  var storage = config.storage;\n  var serialize = config.serialize === false ? function (x) {\n    return x;\n  } : defaultSerialize;\n\n  // initialize stateful values\n  var lastState = {};\n  var stagedState = {};\n  var keysToProcess = [];\n  var timeIterator = null;\n  var writePromise = null;\n\n  var update = function update(state) {\n    // add any changed keys to the queue\n    Object.keys(state).forEach(function (key) {\n      if (!passWhitelistBlacklist(key)) return; // is keyspace ignored? noop\n      if (lastState[key] === state[key]) return; // value unchanged? noop\n      if (keysToProcess.indexOf(key) !== -1) return; // is key already queued? noop\n      keysToProcess.push(key); // add key to queue\n    });\n\n    //if any key is missing in the new state which was present in the lastState,\n    //add it for processing too\n    Object.keys(lastState).forEach(function (key) {\n      if (state[key] === undefined) {\n        keysToProcess.push(key);\n      }\n    });\n\n    // start the time iterator if not running (read: throttle)\n    if (timeIterator === null) {\n      timeIterator = setInterval(processNextKey, throttle);\n    }\n\n    lastState = state;\n  };\n\n  function processNextKey() {\n    if (keysToProcess.length === 0) {\n      if (timeIterator) clearInterval(timeIterator);\n      timeIterator = null;\n      return;\n    }\n\n    var key = keysToProcess.shift();\n    var endState = transforms.reduce(function (subState, transformer) {\n      return transformer.in(subState, key, lastState);\n    }, lastState[key]);\n\n    if (endState !== undefined) {\n      try {\n        stagedState[key] = serialize(endState);\n      } catch (err) {\n        console.error('redux-persist/createPersistoid: error serializing state', err);\n      }\n    } else {\n      //if the endState is undefined, no need to persist the existing serialized content\n      delete stagedState[key];\n    }\n\n    if (keysToProcess.length === 0) {\n      writeStagedState();\n    }\n  }\n\n  function writeStagedState() {\n    // cleanup any removed keys just before write.\n    Object.keys(stagedState).forEach(function (key) {\n      if (lastState[key] === undefined) {\n        delete stagedState[key];\n      }\n    });\n\n    writePromise = storage.setItem(storageKey, serialize(stagedState)).catch(onWriteFail);\n  }\n\n  function passWhitelistBlacklist(key) {\n    if (whitelist && whitelist.indexOf(key) === -1 && key !== '_persist') return false;\n    if (blacklist && blacklist.indexOf(key) !== -1) return false;\n    return true;\n  }\n\n  function onWriteFail(err) {\n    // @TODO add fail handlers (typically storage full)\n    if (err && process.env.NODE_ENV !== 'production') {\n      console.error('Error storing data', err);\n    }\n  }\n\n  var flush = function flush() {\n    while (keysToProcess.length !== 0) {\n      processNextKey();\n    }\n    return writePromise || Promise.resolve();\n  };\n\n  // return `persistoid`\n  return {\n    update: update,\n    flush: flush\n  };\n}\n\n// @NOTE in the future this may be exposed via config\nfunction defaultSerialize(data) {\n  return JSON.stringify(data);\n}","\n\nimport { KEY_PREFIX } from './constants';\n\nexport default function getStoredState(config) {\n  var transforms = config.transforms || [];\n  var storageKey = '' + (config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX) + config.key;\n  var storage = config.storage;\n  var debug = config.debug;\n  var deserialize = config.serialize === false ? function (x) {\n    return x;\n  } : defaultDeserialize;\n  return storage.getItem(storageKey).then(function (serialized) {\n    if (!serialized) return undefined;else {\n      try {\n        var state = {};\n        var rawState = deserialize(serialized);\n        Object.keys(rawState).forEach(function (key) {\n          state[key] = transforms.reduceRight(function (subState, transformer) {\n            return transformer.out(subState, key, rawState);\n          }, deserialize(rawState[key]));\n        });\n        return state;\n      } catch (err) {\n        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist/getStoredState: Error restoring data ' + serialized, err);\n        throw err;\n      }\n    }\n  });\n}\n\nfunction defaultDeserialize(serial) {\n  return JSON.parse(serial);\n}","\n\nimport { KEY_PREFIX } from './constants';\n\nexport default function purgeStoredState(config) {\n  var storage = config.storage;\n  var storageKey = '' + (config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX) + config.key;\n  return storage.removeItem(storageKey, warnIfRemoveError);\n}\n\nfunction warnIfRemoveError(err) {\n  if (err && process.env.NODE_ENV !== 'production') {\n    console.error('redux-persist/purgeStoredState: Error purging data stored state', err);\n  }\n}","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport { FLUSH, PAUSE, PERSIST, PURGE, REHYDRATE, DEFAULT_VERSION } from './constants';\n\nimport autoMergeLevel1 from './stateReconciler/autoMergeLevel1';\nimport createPersistoid from './createPersistoid';\nimport defaultGetStoredState from './getStoredState';\nimport purgeStoredState from './purgeStoredState';\n\nvar DEFAULT_TIMEOUT = 5000;\n/*\n  @TODO add validation / handling for:\n  - persisting a reducer which has nested _persist\n  - handling actions that fire before reydrate is called\n*/\nexport default function persistReducer(config, baseReducer) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!config) throw new Error('config is required for persistReducer');\n    if (!config.key) throw new Error('key is required in persistor config');\n    if (!config.storage) throw new Error(\"redux-persist: config.storage is required. Try using one of the provided storage engines `import storage from 'redux-persist/lib/storage'`\");\n  }\n\n  var version = config.version !== undefined ? config.version : DEFAULT_VERSION;\n  var debug = config.debug || false;\n  var stateReconciler = config.stateReconciler === undefined ? autoMergeLevel1 : config.stateReconciler;\n  var getStoredState = config.getStoredState || defaultGetStoredState;\n  var timeout = config.timeout !== undefined ? config.timeout : DEFAULT_TIMEOUT;\n  var _persistoid = null;\n  var _purge = false;\n  var _paused = true;\n  var conditionalUpdate = function conditionalUpdate(state) {\n    // update the persistoid only if we are rehydrated and not paused\n    state._persist.rehydrated && _persistoid && !_paused && _persistoid.update(state);\n    return state;\n  };\n\n  return function (state, action) {\n    var _ref = state || {},\n        _persist = _ref._persist,\n        rest = _objectWithoutProperties(_ref, ['_persist']);\n\n    var restState = rest;\n\n    if (action.type === PERSIST) {\n      var _sealed = false;\n      var _rehydrate = function _rehydrate(payload, err) {\n        // dev warning if we are already sealed\n        if (process.env.NODE_ENV !== 'production' && _sealed) console.error('redux-persist: rehydrate for \"' + config.key + '\" called after timeout.', payload, err);\n\n        // only rehydrate if we are not already sealed\n        if (!_sealed) {\n          action.rehydrate(config.key, payload, err);\n          _sealed = true;\n        }\n      };\n      timeout && setTimeout(function () {\n        !_sealed && _rehydrate(undefined, new Error('redux-persist: persist timed out for persist key \"' + config.key + '\"'));\n      }, timeout);\n\n      // @NOTE PERSIST resumes if paused.\n      _paused = false;\n\n      // @NOTE only ever create persistoid once, ensure we call it at least once, even if _persist has already been set\n      if (!_persistoid) _persistoid = createPersistoid(config);\n\n      // @NOTE PERSIST can be called multiple times, noop after the first\n      if (_persist) return state;\n      if (typeof action.rehydrate !== 'function' || typeof action.register !== 'function') throw new Error('redux-persist: either rehydrate or register is not a function on the PERSIST action. This can happen if the action is being replayed. This is an unexplored use case, please open an issue and we will figure out a resolution.');\n\n      action.register(config.key);\n\n      getStoredState(config).then(function (restoredState) {\n        var migrate = config.migrate || function (s, v) {\n          return Promise.resolve(s);\n        };\n        migrate(restoredState, version).then(function (migratedState) {\n          _rehydrate(migratedState);\n        }, function (migrateErr) {\n          if (process.env.NODE_ENV !== 'production' && migrateErr) console.error('redux-persist: migration error', migrateErr);\n          _rehydrate(undefined, migrateErr);\n        });\n      }, function (err) {\n        _rehydrate(undefined, err);\n      });\n\n      return _extends({}, baseReducer(restState, action), {\n        _persist: { version: version, rehydrated: false }\n      });\n    } else if (action.type === PURGE) {\n      _purge = true;\n      action.result(purgeStoredState(config));\n      return _extends({}, baseReducer(restState, action), {\n        _persist: _persist\n      });\n    } else if (action.type === FLUSH) {\n      action.result(_persistoid && _persistoid.flush());\n      return _extends({}, baseReducer(restState, action), {\n        _persist: _persist\n      });\n    } else if (action.type === PAUSE) {\n      _paused = true;\n    } else if (action.type === REHYDRATE) {\n      // noop on restState if purging\n      if (_purge) return _extends({}, restState, {\n        _persist: _extends({}, _persist, { rehydrated: true })\n\n        // @NOTE if key does not match, will continue to default else below\n      });if (action.key === config.key) {\n        var reducedState = baseReducer(restState, action);\n        var inboundState = action.payload;\n        // only reconcile state if stateReconciler and inboundState are both defined\n        var reconciledRest = stateReconciler !== false && inboundState !== undefined ? stateReconciler(inboundState, state, reducedState, config) : reducedState;\n\n        var _newState = _extends({}, reconciledRest, {\n          _persist: _extends({}, _persist, { rehydrated: true })\n        });\n        return conditionalUpdate(_newState);\n      }\n    }\n\n    // if we have not already handled PERSIST, straight passthrough\n    if (!_persist) return baseReducer(state, action);\n\n    // run base reducer:\n    // is state modified ? return original : return updated\n    var newState = baseReducer(restState, action);\n    if (newState === restState) return state;else {\n      newState._persist = _persist;\n      return conditionalUpdate(newState);\n    }\n  };\n}","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexport default function autoMergeLevel2(inboundState, originalState, reducedState, _ref) {\n  var debug = _ref.debug;\n\n  var newState = _extends({}, reducedState);\n  // only rehydrate if inboundState exists and is an object\n  if (inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') {\n    Object.keys(inboundState).forEach(function (key) {\n      // ignore _persist data\n      if (key === '_persist') return;\n      // if reducer modifies substate, skip auto rehydration\n      if (originalState[key] !== reducedState[key]) {\n        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist/stateReconciler: sub state for key `%s` modified, skipping.', key);\n        return;\n      }\n      if (isPlainEnoughObject(reducedState[key])) {\n        // if object is plain enough shallow merge the new values (hence \"Level2\")\n        newState[key] = _extends({}, newState[key], inboundState[key]);\n        return;\n      }\n      // otherwise hard set\n      newState[key] = inboundState[key];\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production' && debug && inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') console.log('redux-persist/stateReconciler: rehydrated keys \\'' + Object.keys(inboundState).join(', ') + '\\'');\n\n  return newState;\n}\n\n/*\n  autoMergeLevel2: \n    - merges 2 level of substate\n    - skips substate if already modified\n    - this is essentially redux-perist v4 behavior\n*/\n\nfunction isPlainEnoughObject(o) {\n  return o !== null && !Array.isArray(o) && (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object';\n}","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nimport { createStore } from 'redux';\n\nimport persistReducer from './persistReducer';\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE } from './constants';\n\nvar initialState = {\n  registry: [],\n  bootstrapped: false\n};\n\nvar persistorReducer = function persistorReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments[1];\n\n  switch (action.type) {\n    case REGISTER:\n      return _extends({}, state, { registry: [].concat(_toConsumableArray(state.registry), [action.key]) });\n    case REHYDRATE:\n      var firstIndex = state.registry.indexOf(action.key);\n      var registry = [].concat(_toConsumableArray(state.registry));\n      registry.splice(firstIndex, 1);\n      return _extends({}, state, { registry: registry, bootstrapped: registry.length === 0 });\n    default:\n      return state;\n  }\n};\n\nexport default function persistStore(store, options, cb) {\n  // help catch incorrect usage of passing PersistConfig in as PersistorOptions\n  if (process.env.NODE_ENV !== 'production') {\n    var optionsToTest = options || {};\n    var bannedKeys = ['blacklist', 'whitelist', 'transforms', 'storage', 'keyPrefix', 'migrate'];\n    bannedKeys.forEach(function (k) {\n      if (!!optionsToTest[k]) console.error('redux-persist: invalid option passed to persistStore: \"' + k + '\". You may be incorrectly passing persistConfig into persistStore, whereas it should be passed into persistReducer.');\n    });\n  }\n  var boostrappedCb = cb || false;\n\n  var _pStore = createStore(persistorReducer, initialState, options ? options.enhancer : undefined);\n  var register = function register(key) {\n    _pStore.dispatch({\n      type: REGISTER,\n      key: key\n    });\n  };\n\n  var rehydrate = function rehydrate(key, payload, err) {\n    var rehydrateAction = {\n      type: REHYDRATE,\n      payload: payload,\n      err: err,\n      key: key\n      // dispatch to `store` to rehydrate and `persistor` to track result\n    };store.dispatch(rehydrateAction);\n    _pStore.dispatch(rehydrateAction);\n    if (boostrappedCb && persistor.getState().bootstrapped) {\n      boostrappedCb();\n      boostrappedCb = false;\n    }\n  };\n\n  var persistor = _extends({}, _pStore, {\n    purge: function purge() {\n      var results = [];\n      store.dispatch({\n        type: PURGE,\n        result: function result(purgeResult) {\n          results.push(purgeResult);\n        }\n      });\n      return Promise.all(results);\n    },\n    flush: function flush() {\n      var results = [];\n      store.dispatch({\n        type: FLUSH,\n        result: function result(flushResult) {\n          results.push(flushResult);\n        }\n      });\n      return Promise.all(results);\n    },\n    pause: function pause() {\n      store.dispatch({\n        type: PAUSE\n      });\n    },\n    persist: function persist() {\n      store.dispatch({ type: PERSIST, register: register, rehydrate: rehydrate });\n    }\n  });\n\n  persistor.persist();\n\n  return persistor;\n}","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = autoMergeLevel2;\nfunction autoMergeLevel2(inboundState, originalState, reducedState, _ref) {\n  var debug = _ref.debug;\n\n  var newState = _extends({}, reducedState);\n  // only rehydrate if inboundState exists and is an object\n  if (inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') {\n    Object.keys(inboundState).forEach(function (key) {\n      // ignore _persist data\n      if (key === '_persist') return;\n      // if reducer modifies substate, skip auto rehydration\n      if (originalState[key] !== reducedState[key]) {\n        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist/stateReconciler: sub state for key `%s` modified, skipping.', key);\n        return;\n      }\n      if (isPlainEnoughObject(reducedState[key])) {\n        // if object is plain enough shallow merge the new values (hence \"Level2\")\n        newState[key] = _extends({}, newState[key], inboundState[key]);\n        return;\n      }\n      // otherwise hard set\n      newState[key] = inboundState[key];\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production' && debug && inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') console.log('redux-persist/stateReconciler: rehydrated keys \\'' + Object.keys(inboundState).join(', ') + '\\'');\n\n  return newState;\n}\n\n/*\n  autoMergeLevel2: \n    - merges 2 level of substate\n    - skips substate if already modified\n    - this is essentially redux-perist v4 behavior\n*/\n\nfunction isPlainEnoughObject(o) {\n  return o !== null && !Array.isArray(o) && (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object';\n}","'use strict';\n\nexports.__esModule = true;\nexports.default = createWebStorage;\n\nvar _getStorage = require('./getStorage');\n\nvar _getStorage2 = _interopRequireDefault(_getStorage);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createWebStorage(type) {\n  var storage = (0, _getStorage2.default)(type);\n  return {\n    getItem: function getItem(key) {\n      return new Promise(function (resolve, reject) {\n        resolve(storage.getItem(key));\n      });\n    },\n    setItem: function setItem(key, item) {\n      return new Promise(function (resolve, reject) {\n        resolve(storage.setItem(key, item));\n      });\n    },\n    removeItem: function removeItem(key) {\n      return new Promise(function (resolve, reject) {\n        resolve(storage.removeItem(key));\n      });\n    }\n  };\n}","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = getStorage;\n\n\nfunction noop() {}\n\nvar noopStorage = {\n  getItem: noop,\n  setItem: noop,\n  removeItem: noop\n};\n\nfunction hasStorage(storageType) {\n  if ((typeof self === 'undefined' ? 'undefined' : _typeof(self)) !== 'object' || !(storageType in self)) {\n    return false;\n  }\n\n  try {\n    var storage = self[storageType];\n    var testKey = 'redux-persist ' + storageType + ' test';\n    storage.setItem(testKey, 'test');\n    storage.getItem(testKey);\n    storage.removeItem(testKey);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') console.warn('redux-persist ' + storageType + ' test failed, persistence will be disabled.');\n    return false;\n  }\n  return true;\n}\n\nfunction getStorage(type) {\n  var storageType = type + 'Storage';\n  if (hasStorage(storageType)) return self[storageType];else {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error('redux-persist failed to create sync storage. falling back to memory storage.');\n    }\n    return noopStorage;\n  }\n}","'use strict';\n\nexports.__esModule = true;\n\nvar _createWebStorage = require('./createWebStorage');\n\nvar _createWebStorage2 = _interopRequireDefault(_createWebStorage);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = (0, _createWebStorage2.default)('local');","'use strict';\n\nexports.__esModule = true;\n\nvar _createWebStorage = require('./createWebStorage');\n\nvar _createWebStorage2 = _interopRequireDefault(_createWebStorage);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = (0, _createWebStorage2.default)('session');"],"names":["Symbol","iterator","Object","assign","REGISTER","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_toConsumableArray","arr","Array","isArray","arr2","from","initialState","registry","bootstrapped","persistorReducer","state","undefined","action","type","concat","firstIndex","indexOf","splice","persistStore","store","options","cb","boostrappedCb","_pStore","enhancer","register","dispatch","rehydrate","payload","err","rehydrateAction","persistor","getState","purge","results","result","purgeResult","push","Promise","all","flush","flushResult","pause","persist","KEY_PREFIX","DEFAULT_VERSION","_typeof","obj","constructor","_extends","autoMergeLevel1","inboundState","originalState","reducedState","_ref","debug","newState","keys","forEach","createPersistoid","config","blacklist","whitelist","transforms","throttle","storageKey","keyPrefix","storage","serialize","x","defaultSerialize","lastState","stagedState","keysToProcess","timeIterator","writePromise","processNextKey","clearInterval","shift","endState","reduce","subState","transformer","in","console","error","setItem","catch","onWriteFail","update","passWhitelistBlacklist","setInterval","resolve","data","JSON","stringify","deserialize","defaultDeserialize","getItem","then","serialized","rawState","reduceRight","out","serial","parse","warnIfRemoveError","DEFAULT_TIMEOUT","baseReducer","version","stateReconciler","getStoredState","timeout","_persistoid","_purge","_paused","conditionalUpdate","_persist","rehydrated","restState","_objectWithoutProperties","_sealed","_rehydrate","setTimeout","Error","restoredState","migrate","s","v","migratedState","migrateErr","removeItem","purgeStoredState","reconciledRest","_newState","exports","o","__esModule","_getStorage2","default","reject","item","_getStorage","noop","storageType","self","testKey","e","hasStorage","noopStorage","_createWebStorage","_createWebStorage2"],"sourceRoot":""}